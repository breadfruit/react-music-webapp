{"ast":null,"code":"var _jsxFileName = \"/Users/macos/Desktop/react-music-webapp/src/baseUI/horizen-item/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect, memo } from 'react';\nimport styled from 'styled-components';\nimport Scroll from '../scroll/index';\nimport { PropTypes } from 'prop-types';\nimport style from '../../assets/global-style'; //样式部分\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst List = styled.div`\n  display: flex;\n  align-items: center;\n  height: 30px;\n  justify-content: center;\n  overflow: hidden;\n  >span:first-of-type{\n    display: block;\n    flex: 0 0 auto;\n    padding: 5px 0;\n    color: grey;\n    font-size: ${style[\"font-size-m\"]};\n    vertical-align: middle;\n  }\n`;\n_c = List;\nconst ListItem = styled.span`\n  flex: 0 0 auto;\n  font-size: ${style[\"font-size-m\"]};\n  padding: 5px 5px;\n  border-radius: 10px;\n  &.selected{\n    color: ${style[\"theme-color\"]};\n    border: 1px solid ${style[\"theme-color\"]};\n    opacity: 0.8;\n  }\n`;\n_c2 = ListItem;\n\nfunction Horizen(props) {\n  _s();\n\n  const [refreshCategoryScroll, setRefreshCategoryScroll] = useState(false);\n  const Category = useRef(null);\n  const {\n    list,\n    oldVal,\n    title\n  } = props;\n  const {\n    handleClick\n  } = props;\n  useEffect(() => {\n    let categoryDOM = Category.current;\n    let tagElems = categoryDOM.querySelectorAll(\"span\");\n    let totalWidth = 0;\n    Array.from(tagElems).forEach(ele => {\n      totalWidth += ele.offsetWidth;\n    });\n    totalWidth += 2;\n    categoryDOM.style.width = `${totalWidth}px`;\n    setRefreshCategoryScroll(true);\n  }, [refreshCategoryScroll]);\n\n  const clickHandle = item => {\n    handleClick(item.key);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Scroll, {\n    direction: \"horizental\",\n    refresh: true,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: Category,\n      children: /*#__PURE__*/_jsxDEV(List, {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), list.map(item => {\n          return /*#__PURE__*/_jsxDEV(ListItem, {\n            className: oldVal === item.key ? 'selected' : '',\n            onClick: () => clickHandle(item),\n            children: item.name\n          }, item.key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 17\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Horizen, \"gxiZjuyPhhEJd0zLHy7xWSpy1A0=\");\n\n_c3 = Horizen;\nHorizen.defaultProps = {\n  list: [],\n  handleClick: null\n};\nHorizen.propTypes = {\n  list: PropTypes.array,\n  handleClick: PropTypes.func\n};\nexport default _c4 = /*#__PURE__*/memo(Horizen);\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"List\");\n$RefreshReg$(_c2, \"ListItem\");\n$RefreshReg$(_c3, \"Horizen\");\n$RefreshReg$(_c4, \"%default%\");","map":{"version":3,"sources":["/Users/macos/Desktop/react-music-webapp/src/baseUI/horizen-item/index.js"],"names":["React","useState","useRef","useEffect","memo","styled","Scroll","PropTypes","style","List","div","ListItem","span","Horizen","props","refreshCategoryScroll","setRefreshCategoryScroll","Category","list","oldVal","title","handleClick","categoryDOM","current","tagElems","querySelectorAll","totalWidth","Array","from","forEach","ele","offsetWidth","width","clickHandle","item","key","map","name","defaultProps","propTypes","array","func"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,SAAlC,EAA6CC,IAA7C,QAAyD,OAAzD;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,SAASC,SAAT,QAA0B,YAA1B;AACA,OAAOC,KAAP,MAAkB,2BAAlB,C,CAEA;;;AACA,MAAMC,IAAI,GAAGJ,MAAM,CAACK,GAAI;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiBF,KAAK,CAAC,aAAD,CAAgB;AACtC;AACA;AACA,CAdA;KAAMC,I;AAeN,MAAME,QAAQ,GAAGN,MAAM,CAACO,IAAK;AAC7B;AACA,eAAeJ,KAAK,CAAC,aAAD,CAAgB;AACpC;AACA;AACA;AACA,aAAaA,KAAK,CAAC,aAAD,CAAgB;AAClC,wBAAwBA,KAAK,CAAC,aAAD,CAAgB;AAC7C;AACA;AACA,CAVA;MAAMG,Q;;AAYN,SAASE,OAAT,CAAiBC,KAAjB,EAAwB;AAAA;;AACtB,QAAM,CAACC,qBAAD,EAAwBC,wBAAxB,IAAoDf,QAAQ,CAAC,KAAD,CAAlE;AACA,QAAMgB,QAAQ,GAAGf,MAAM,CAAC,IAAD,CAAvB;AACA,QAAM;AAAEgB,IAAAA,IAAF;AAAQC,IAAAA,MAAR;AAAgBC,IAAAA;AAAhB,MAA0BN,KAAhC;AACA,QAAM;AAAEO,IAAAA;AAAF,MAAkBP,KAAxB;AAEAX,EAAAA,SAAS,CAAC,MAAM;AACd,QAAImB,WAAW,GAAGL,QAAQ,CAACM,OAA3B;AACA,QAAIC,QAAQ,GAAGF,WAAW,CAACG,gBAAZ,CAA6B,MAA7B,CAAf;AACA,QAAIC,UAAU,GAAG,CAAjB;AACAC,IAAAA,KAAK,CAACC,IAAN,CAAWJ,QAAX,EAAqBK,OAArB,CAA6BC,GAAG,IAAI;AAClCJ,MAAAA,UAAU,IAAII,GAAG,CAACC,WAAlB;AACD,KAFD;AAGAL,IAAAA,UAAU,IAAI,CAAd;AACAJ,IAAAA,WAAW,CAACd,KAAZ,CAAkBwB,KAAlB,GAA2B,GAAEN,UAAW,IAAxC;AACAV,IAAAA,wBAAwB,CAAC,IAAD,CAAxB;AACD,GAVQ,EAUN,CAACD,qBAAD,CAVM,CAAT;;AAYA,QAAMkB,WAAW,GAAIC,IAAD,IAAU;AAC5Bb,IAAAA,WAAW,CAACa,IAAI,CAACC,GAAN,CAAX;AACD,GAFD;;AAGA,sBACE,QAAC,MAAD;AAAQ,IAAA,SAAS,EAAE,YAAnB;AAAiC,IAAA,OAAO,EAAE,IAA1C;AAAA,2BACE;AAAK,MAAA,GAAG,EAAElB,QAAV;AAAA,6BACE,QAAC,IAAD;AAAA,gCACE;AAAA,oBAAOG;AAAP;AAAA;AAAA;AAAA;AAAA,gBADF,EAGIF,IAAI,CAACkB,GAAL,CAAUF,IAAD,IAAU;AACjB,8BACE,QAAC,QAAD;AAEE,YAAA,SAAS,EAAEf,MAAM,KAAKe,IAAI,CAACC,GAAhB,GAAsB,UAAtB,GAAmC,EAFhD;AAGE,YAAA,OAAO,EAAE,MAAMF,WAAW,CAACC,IAAD,CAH5B;AAAA,sBAIGA,IAAI,CAACG;AAJR,aACOH,IAAI,CAACC,GADZ;AAAA;AAAA;AAAA;AAAA,kBADF;AAQD,SATD,CAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD;;GA1CQtB,O;;MAAAA,O;AA4CTA,OAAO,CAACyB,YAAR,GAAuB;AACrBpB,EAAAA,IAAI,EAAE,EADe;AAErBG,EAAAA,WAAW,EAAE;AAFQ,CAAvB;AAKAR,OAAO,CAAC0B,SAAR,GAAoB;AAClBrB,EAAAA,IAAI,EAAEX,SAAS,CAACiC,KADE;AAElBnB,EAAAA,WAAW,EAAEd,SAAS,CAACkC;AAFL,CAApB;AAKA,kCAAerC,IAAI,CAACS,OAAD,CAAnB","sourcesContent":["import React, { useState, useRef, useEffect, memo } from 'react';\nimport styled from 'styled-components';\nimport Scroll from '../scroll/index'\nimport { PropTypes } from 'prop-types';\nimport style from '../../assets/global-style';\n\n//样式部分\nconst List = styled.div`\n  display: flex;\n  align-items: center;\n  height: 30px;\n  justify-content: center;\n  overflow: hidden;\n  >span:first-of-type{\n    display: block;\n    flex: 0 0 auto;\n    padding: 5px 0;\n    color: grey;\n    font-size: ${style[\"font-size-m\"]};\n    vertical-align: middle;\n  }\n`\nconst ListItem = styled.span`\n  flex: 0 0 auto;\n  font-size: ${style[\"font-size-m\"]};\n  padding: 5px 5px;\n  border-radius: 10px;\n  &.selected{\n    color: ${style[\"theme-color\"]};\n    border: 1px solid ${style[\"theme-color\"]};\n    opacity: 0.8;\n  }\n`\n\nfunction Horizen(props) {\n  const [refreshCategoryScroll, setRefreshCategoryScroll] = useState(false);\n  const Category = useRef(null);\n  const { list, oldVal, title } = props;\n  const { handleClick } = props;\n\n  useEffect(() => {\n    let categoryDOM = Category.current;\n    let tagElems = categoryDOM.querySelectorAll(\"span\");\n    let totalWidth = 0;\n    Array.from(tagElems).forEach(ele => {\n      totalWidth += ele.offsetWidth;\n    });\n    totalWidth += 2;\n    categoryDOM.style.width = `${totalWidth}px`;\n    setRefreshCategoryScroll(true);\n  }, [refreshCategoryScroll]);\n\n  const clickHandle = (item) => {\n    handleClick(item.key);\n  }\n  return (\n    <Scroll direction={\"horizental\"} refresh={true}>\n      <div ref={Category} >\n        <List>\n          <span>{title}</span>\n          {\n            list.map((item) => {\n              return (\n                <ListItem\n                  key={item.key}\n                  className={oldVal === item.key ? 'selected' : ''}\n                  onClick={() => clickHandle(item)}>\n                  {item.name}\n                </ListItem>\n              )\n            })\n          }\n        </List>\n      </div>\n    </Scroll>\n  );\n}\n\nHorizen.defaultProps = {\n  list: [],\n  handleClick: null\n};\n\nHorizen.propTypes = {\n  list: PropTypes.array,\n  handleClick: PropTypes.func\n};\n\nexport default memo(Horizen);"]},"metadata":{},"sourceType":"module"}