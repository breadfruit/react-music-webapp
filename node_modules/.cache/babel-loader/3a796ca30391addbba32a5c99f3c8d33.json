{"ast":null,"code":"var _jsxFileName = \"/Users/macos/Desktop/react-music-webapp/src/baseUI/header/index.js\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport style from '../../assets/global-style';\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HeaderContainer = styled.div`\n  position: fixed;\n  padding: 5px 10px;\n  padding-top: 0;\n  height: 40px;\n  width: 100%;\n  z-index: 100;\n  display: flex;\n  line-height: 40px;\n  color: ${style[\"font-color-light\"]};\n  .back {\n    margin-right: 5px;\n    font-size: 20px;\n    width: 20px;\n  }\n  >h1 {\n    font-size: ${style[\"font-size-l\"]};\n    font-weight: 700;\n  }\n`; // 处理函数组件拿不到 ref 的问题，所以用 forwardRef\n\n_c = HeaderContainer;\nconst Header = /*#__PURE__*/React.forwardRef(_c2 = (props, ref) => {\n  const {\n    handleClick,\n    title\n  } = props;\n  return /*#__PURE__*/_jsxDEV(HeaderContainer, {\n    ref: ref,\n    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n      className: \"iconfont back\",\n      onClick: handleClick,\n      children: \"\\uE655\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n});\n_c3 = Header;\nHeader.defaultProps = {\n  handleClick: () => {},\n  title: \"标题\"\n};\nHeader.propTypes = {\n  handleClick: PropTypes.func,\n  title: PropTypes.string\n};\nexport default _c4 = /*#__PURE__*/React.memo(Header);\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"HeaderContainer\");\n$RefreshReg$(_c2, \"Header$React.forwardRef\");\n$RefreshReg$(_c3, \"Header\");\n$RefreshReg$(_c4, \"%default%\");","map":{"version":3,"sources":["/Users/macos/Desktop/react-music-webapp/src/baseUI/header/index.js"],"names":["React","styled","style","PropTypes","HeaderContainer","div","Header","forwardRef","props","ref","handleClick","title","defaultProps","propTypes","func","string","memo"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAkB,mBAAlB;AACA,OAAOC,KAAP,MAAkB,2BAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,eAAe,GAAGH,MAAM,CAACI,GAAI;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAWH,KAAK,CAAE,kBAAF,CAAsB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiBA,KAAK,CAAE,aAAF,CAAiB;AACvC;AACA;AACA,CAnBA,C,CAoBA;;KApBME,e;AAqBN,MAAME,MAAM,gBAAGN,KAAK,CAACO,UAAN,OAAkB,CAACC,KAAD,EAAQC,GAAR,KAAgB;AAC/C,QAAM;AAAEC,IAAAA,WAAF;AAAeC,IAAAA;AAAf,MAAwBH,KAA9B;AACA,sBACE,QAAC,eAAD;AAAiB,IAAA,GAAG,EAAEC,GAAtB;AAAA,4BACE;AAAG,MAAA,SAAS,EAAC,eAAb;AAA8B,MAAA,OAAO,EAAEC,WAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBAAKC;AAAL;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CARc,CAAf;MAAML,M;AAUNA,MAAM,CAACM,YAAP,GAAsB;AACpBF,EAAAA,WAAW,EAAE,MAAM,CAAE,CADD;AAEpBC,EAAAA,KAAK,EAAE;AAFa,CAAtB;AAKAL,MAAM,CAACO,SAAP,GAAmB;AACjBH,EAAAA,WAAW,EAAEP,SAAS,CAACW,IADN;AAEjBH,EAAAA,KAAK,EAAER,SAAS,CAACY;AAFA,CAAnB;AAKA,kCAAef,KAAK,CAACgB,IAAN,CAAYV,MAAZ,CAAf","sourcesContent":["import React from 'react';\nimport styled from'styled-components';\nimport style from '../../assets/global-style';\nimport PropTypes from \"prop-types\";\n\nconst HeaderContainer = styled.div`\n  position: fixed;\n  padding: 5px 10px;\n  padding-top: 0;\n  height: 40px;\n  width: 100%;\n  z-index: 100;\n  display: flex;\n  line-height: 40px;\n  color: ${style [\"font-color-light\"]};\n  .back {\n    margin-right: 5px;\n    font-size: 20px;\n    width: 20px;\n  }\n  >h1 {\n    font-size: ${style [\"font-size-l\"]};\n    font-weight: 700;\n  }\n`\n// 处理函数组件拿不到 ref 的问题，所以用 forwardRef\nconst Header = React.forwardRef ((props, ref) => {\n  const { handleClick, title} = props;\n  return (\n    <HeaderContainer ref={ref}> \n      <i className=\"iconfont back\"  onClick={handleClick}>&#xe655;</i>\n      <h1>{title}</h1>\n    </HeaderContainer>\n  )\n})\n\nHeader.defaultProps = {\n  handleClick: () => {},\n  title: \"标题\",\n};\n\nHeader.propTypes = {\n  handleClick: PropTypes.func,\n  title: PropTypes.string,\n};\n\nexport default React.memo (Header);"]},"metadata":{},"sourceType":"module"}