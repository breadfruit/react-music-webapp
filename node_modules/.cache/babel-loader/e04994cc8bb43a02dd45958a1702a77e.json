{"ast":null,"code":"var _jsxFileName = \"/Users/macos/Desktop/react-music-webapp/src/application/Player/normalPlayer/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect, useCallback } from \"react\";\nimport { CSSTransition } from \"react-transition-group\";\nimport { getName, prefixStyle } from \"../../../api/utils\";\nimport animations from \"create-keyframe-animation\";\nimport { NormalPlayerContainer, Top, Middle, Bottom, ProgressWrapper, Operators, CDWrapper, LyricContainer, LyricWrapper, List, ListItem } from \"./style\";\nimport ProgressBar from '../../../baseUI/progressBar/index';\nimport { formatPlayTime } from '../../../api/utils';\nimport { playMode } from '../../../api/config';\nimport Scroll from \"../../../baseUI/scroll\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction NormalPlayer(props) {\n  _s();\n\n  const {\n    full,\n    song,\n    mode,\n    playing,\n    percent,\n    currentTime,\n    duration,\n    currentLineNum,\n    currentPlayingLyric,\n    currentLyric,\n    speed\n  } = props;\n  const {\n    changeMode,\n    handlePrev,\n    handleNext,\n    onProgressChange,\n    clickPlaying,\n    toggleFullScreenDispatch,\n    togglePlayListDispatch,\n    clickSpeed\n  } = props; //处理transform的浏览器兼容问题\n\n  const transform = prefixStyle(\"transform\");\n  const normalPlayerRef = useRef();\n  const lyricScrollRef = useRef();\n  const lyricLineRefs = useRef([]);\n  const cdWrapperRef = useRef();\n  const [currentState, setCurrentState] = useState(0);\n  useEffect(() => {\n    if (!lyricScrollRef.current) return;\n    let bScroll = lyricScrollRef.current.getBScroll();\n\n    if (currentLineNum > 5) {\n      let lineEl = lyricLineRefs.current[currentLineNum - 5].current;\n      bScroll.scrollToElement(lineEl, 1000);\n    } else {\n      bScroll.scrollTo(0, 0, 1000);\n    }\n  }, [currentLineNum]);\n\n  const getPlayMode = () => {\n    let content;\n\n    if (mode === playMode.sequence) {\n      content = \"&#xe625;\";\n    } else if (mode === playMode.loop) {\n      content = \"&#xe653;\";\n    } else {\n      content = \"&#xe61b;\";\n    }\n\n    return content;\n  };\n\n  const _getPosAndScale = () => {\n    const targetWidth = 40;\n    const paddingLeft = 40;\n    const paddingBottom = 30;\n    const paddingTop = 80;\n    const width = window.innerWidth * 0.8;\n    const scale = targetWidth / width; // 两个圆心的横坐标距离和纵坐标距离\n\n    const x = -(window.innerWidth / 2 - paddingLeft);\n    const y = window.innerHeight - paddingTop - width / 2 - paddingBottom;\n    return {\n      x,\n      y,\n      scale\n    };\n  };\n\n  const enter = () => {\n    normalPlayerRef.current.style.display = \"block\";\n\n    const {\n      x,\n      y,\n      scale\n    } = _getPosAndScale();\n\n    let animation = {\n      0: {\n        transform: `translate3d(${x}px,${y}px,0) scale(${scale})`\n      },\n      60: {\n        transform: `translate3d(0, 0, 0) scale(1.1)`\n      },\n      100: {\n        transform: `translate3d(0, 0, 0) scale(1)`\n      }\n    };\n    animations.registerAnimation({\n      name: \"move\",\n      animation,\n      presets: {\n        duration: 400,\n        easing: \"linear\"\n      }\n    });\n    animations.runAnimation(cdWrapperRef.current, \"move\");\n  };\n\n  const afterEnter = () => {\n    const cdWrapperDom = cdWrapperRef.current;\n    animations.unregisterAnimation(\"move\");\n    cdWrapperDom.style.animation = \"\";\n  };\n\n  const leave = () => {\n    if (!cdWrapperRef.current) return;\n    const cdWrapperDom = cdWrapperRef.current;\n    cdWrapperDom.style.transition = \"all 0.4s\";\n\n    const {\n      x,\n      y,\n      scale\n    } = _getPosAndScale();\n\n    cdWrapperDom.style[transform] = `translate3d(${x}px, ${y}px, 0) scale(${scale})`;\n  };\n\n  const afterLeave = () => {\n    if (!cdWrapperRef.current) return;\n    const cdWrapperDom = cdWrapperRef.current;\n    cdWrapperDom.style.transition = \"\";\n    cdWrapperDom.style[transform] = \"\";\n    normalPlayerRef.current.style.display = \"none\";\n    setCurrentState(\"\");\n  };\n\n  const toggleCurrentState = () => {\n    let nextState = \"\";\n\n    if (currentState !== \"lyric\") {\n      nextState = \"lyric\";\n    } else {\n      nextState = \"\";\n    }\n\n    setCurrentState(nextState);\n  };\n\n  const clickPlayingCB = useCallback(e => {\n    clickPlaying(e, !playing);\n  }, [clickPlaying, playing]);\n  return /*#__PURE__*/_jsxDEV(CSSTransition, {\n    classNames: \"normal\",\n    in: full,\n    timeout: 400,\n    mountOnEnter: true,\n    onEnter: enter,\n    onEntered: afterEnter,\n    onExit: leave,\n    onExited: afterLeave,\n    children: /*#__PURE__*/_jsxDEV(NormalPlayerContainer, {\n      ref: normalPlayerRef,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"background\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: song.al.picUrl + \"?param=300x300\",\n          width: \"100%\",\n          height: \"100%\",\n          alt: \"\\u6B4C\\u66F2\\u56FE\\u7247\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"background layer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Top, {\n        className: \"top\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"back\",\n          onClick: () => toggleFullScreenDispatch(false),\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"iconfont icon-back\",\n            children: \"\\uE662\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"title\",\n            children: song.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"subtitle\",\n            children: getName(song.ar)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Middle, {\n        ref: cdWrapperRef,\n        onClick: toggleCurrentState,\n        children: [/*#__PURE__*/_jsxDEV(CSSTransition, {\n          timeout: 400,\n          classNames: \"fade\",\n          in: currentState !== \"lyric\",\n          children: /*#__PURE__*/_jsxDEV(CDWrapper, {\n            style: {\n              visibility: currentState !== \"lyric\" ? \"visible\" : \"hidden\"\n            },\n            playing: playing,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: `needle ${playing ? '' : 'pause'}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"cd\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                className: `image play ${playing ? '' : 'pause'}`,\n                src: song.al.picUrl + \"?param=400x400\",\n                alt: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"playing_lyric\",\n              children: currentPlayingLyric\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CSSTransition, {\n          timeout: 400,\n          classNames: \"fade\",\n          in: currentState === \"lyric\",\n          children: /*#__PURE__*/_jsxDEV(LyricContainer, {\n            children: /*#__PURE__*/_jsxDEV(Scroll, {\n              ref: lyricScrollRef,\n              children: /*#__PURE__*/_jsxDEV(LyricWrapper, {\n                style: {\n                  visibility: currentState === \"lyric\" ? \"visible\" : \"hidden\"\n                },\n                className: \"lyric_wrapper\",\n                children: currentLyric ? currentLyric.lines.map((item, index) => {\n                  lyricLineRefs.current[index] = /*#__PURE__*/React.createRef();\n                  return /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: `text ${currentLineNum === index ? \"current\" : \"\"}`,\n                    ref: lyricLineRefs.current[index],\n                    children: item.txt\n                  }, item + index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 238,\n                    columnNumber: 27\n                  }, this);\n                }) : /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text pure\",\n                  children: \"\\u7EAF\\u97F3\\u4E50\\uFF0C\\u8BF7\\u6B23\\u8D4F\\u3002\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 249,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Bottom, {\n        className: \"bottom\",\n        children: [/*#__PURE__*/_jsxDEV(ProgressWrapper, {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"time time-l\",\n            children: formatPlayTime(currentTime)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-bar-wrapper\",\n            children: /*#__PURE__*/_jsxDEV(ProgressBar, {\n              percent: percent,\n              percentChange: onProgressChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"time time-r\",\n            children: formatPlayTime(duration)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Operators, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"icon i-left\",\n            onClick: changeMode,\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"iconfont\",\n              dangerouslySetInnerHTML: {\n                __html: getPlayMode()\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"icon i-left\",\n            onClick: handlePrev,\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"iconfont\",\n              children: \"\\uE6E1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"icon i-center\",\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"iconfont\",\n              onClick: clickPlayingCB,\n              dangerouslySetInnerHTML: {\n                __html: playing ? \"&#xe723;\" : \"&#xe731;\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"icon i-right\",\n            onClick: handleNext,\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"iconfont\",\n              children: \"\\uE718\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"icon i-right\",\n            onClick: () => togglePlayListDispatch(true),\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"iconfont\",\n              children: \"\\uE640\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 165,\n    columnNumber: 7\n  }, this);\n}\n\n_s(NormalPlayer, \"/ViLAfHDJFkoBqcJXTP87SHUJ0k=\");\n\n_c = NormalPlayer;\nexport default _c2 = /*#__PURE__*/React.memo(NormalPlayer);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"NormalPlayer\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/macos/Desktop/react-music-webapp/src/application/Player/normalPlayer/index.js"],"names":["React","useState","useRef","useEffect","useCallback","CSSTransition","getName","prefixStyle","animations","NormalPlayerContainer","Top","Middle","Bottom","ProgressWrapper","Operators","CDWrapper","LyricContainer","LyricWrapper","List","ListItem","ProgressBar","formatPlayTime","playMode","Scroll","NormalPlayer","props","full","song","mode","playing","percent","currentTime","duration","currentLineNum","currentPlayingLyric","currentLyric","speed","changeMode","handlePrev","handleNext","onProgressChange","clickPlaying","toggleFullScreenDispatch","togglePlayListDispatch","clickSpeed","transform","normalPlayerRef","lyricScrollRef","lyricLineRefs","cdWrapperRef","currentState","setCurrentState","current","bScroll","getBScroll","lineEl","scrollToElement","scrollTo","getPlayMode","content","sequence","loop","_getPosAndScale","targetWidth","paddingLeft","paddingBottom","paddingTop","width","window","innerWidth","scale","x","y","innerHeight","enter","style","display","animation","registerAnimation","name","presets","easing","runAnimation","afterEnter","cdWrapperDom","unregisterAnimation","leave","transition","afterLeave","toggleCurrentState","nextState","clickPlayingCB","e","al","picUrl","ar","visibility","lines","map","item","index","createRef","txt","__html","memo"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect, useCallback } from \"react\";\nimport { CSSTransition } from \"react-transition-group\";\nimport { getName, prefixStyle } from \"../../../api/utils\";\nimport animations from \"create-keyframe-animation\";\nimport {\n    NormalPlayerContainer,\n    Top,\n    Middle,\n    Bottom,\n    ProgressWrapper,\n    Operators,\n    CDWrapper,\n    LyricContainer,\n    LyricWrapper,\n    List,\n    ListItem\n  } from \"./style\";\n\nimport ProgressBar from '../../../baseUI/progressBar/index'\nimport { formatPlayTime } from '../../../api/utils'\nimport { playMode } from '../../../api/config';\n\nimport Scroll from \"../../../baseUI/scroll\";\n\n\n\nfunction NormalPlayer(props) {\n  \n    const {\n      full,\n      song,\n      mode,\n      playing,\n      percent,\n      currentTime,\n      duration,\n      currentLineNum,\n      currentPlayingLyric,\n      currentLyric,\n      speed\n    } = props;\n    const {\n      changeMode,\n      handlePrev,\n      handleNext,\n      onProgressChange,\n      clickPlaying,\n      toggleFullScreenDispatch,\n      togglePlayListDispatch,\n      clickSpeed\n    } = props;\n    //处理transform的浏览器兼容问题\n    const transform = prefixStyle(\"transform\");\n  \n    const normalPlayerRef = useRef();\n    const lyricScrollRef = useRef();\n  \n    const lyricLineRefs = useRef([]);\n    const cdWrapperRef = useRef();\n    const [currentState, setCurrentState] = useState(0);\n  \n    useEffect(() => {\n      if (!lyricScrollRef.current) return;\n      let bScroll = lyricScrollRef.current.getBScroll();\n      if (currentLineNum > 5) {\n        let lineEl = lyricLineRefs.current[currentLineNum - 5].current;\n        bScroll.scrollToElement(lineEl, 1000);\n      } else {\n        bScroll.scrollTo(0, 0, 1000);\n      }\n    }, [currentLineNum]);\n  \n    const getPlayMode = () => {\n      let content;\n      if (mode === playMode.sequence) {\n        content = \"&#xe625;\";\n      } else if (mode === playMode.loop) {\n        content = \"&#xe653;\";\n      } else {\n        content = \"&#xe61b;\";\n      }\n      return content;\n    };\n  \n    const _getPosAndScale = () => {\n      const targetWidth = 40;\n      const paddingLeft = 40;\n      const paddingBottom = 30;\n      const paddingTop = 80;\n      const width = window.innerWidth * 0.8;\n      const scale = targetWidth / width;\n      // 两个圆心的横坐标距离和纵坐标距离\n      const x = -(window.innerWidth / 2 - paddingLeft);\n      const y = window.innerHeight - paddingTop - width / 2 - paddingBottom;\n      return {\n        x,\n        y,\n        scale\n      };\n    };\n  \n    const enter = () => {\n      normalPlayerRef.current.style.display = \"block\";\n      const { x, y, scale } = _getPosAndScale();\n      let animation = {\n        0: {\n          transform: `translate3d(${x}px,${y}px,0) scale(${scale})`\n        },\n        60: {\n          transform: `translate3d(0, 0, 0) scale(1.1)`\n        },\n        100: {\n          transform: `translate3d(0, 0, 0) scale(1)`\n        }\n      };\n      animations.registerAnimation({\n        name: \"move\",\n        animation,\n        presets: {\n          duration: 400,\n          easing: \"linear\"\n        }\n      });\n      animations.runAnimation(cdWrapperRef.current, \"move\");\n    };\n  \n    const afterEnter = () => {\n      const cdWrapperDom = cdWrapperRef.current;\n      animations.unregisterAnimation(\"move\");\n      cdWrapperDom.style.animation = \"\";\n    };\n  \n    const leave = () => {\n      if (!cdWrapperRef.current) return;\n      const cdWrapperDom = cdWrapperRef.current;\n      cdWrapperDom.style.transition = \"all 0.4s\";\n      const { x, y, scale } = _getPosAndScale();\n      cdWrapperDom.style[transform] = `translate3d(${x}px, ${y}px, 0) scale(${scale})`;\n    };\n  \n    const afterLeave = () => {\n      if (!cdWrapperRef.current) return;\n      const cdWrapperDom = cdWrapperRef.current;\n      cdWrapperDom.style.transition = \"\";\n      cdWrapperDom.style[transform] = \"\";\n      normalPlayerRef.current.style.display = \"none\";\n      setCurrentState(\"\");\n    };\n  \n    const toggleCurrentState = () => {\n      let nextState = \"\";\n      if (currentState !== \"lyric\") {\n        nextState = \"lyric\";\n      } else {\n        nextState = \"\";\n      }\n      setCurrentState(nextState);\n    };\n  \n    const clickPlayingCB = useCallback((e) => {\n      clickPlaying(e, !playing);\n    }, [clickPlaying, playing]);\n  \n    return (\n      <CSSTransition\n        classNames=\"normal\"\n        in={full}\n        timeout={400}\n        mountOnEnter\n        onEnter={enter}\n        onEntered={afterEnter}\n        onExit={leave}\n        onExited={afterLeave}\n      >\n        <NormalPlayerContainer ref={normalPlayerRef}>\n          <div className=\"background\">\n            <img\n              src={song.al.picUrl + \"?param=300x300\"}\n              width=\"100%\"\n              height=\"100%\"\n              alt=\"歌曲图片\"\n            />\n          </div>\n          <div className=\"background layer\"></div>\n          <Top className=\"top\">\n            <div className=\"back\" onClick={() => toggleFullScreenDispatch(false)}>\n              <i className=\"iconfont icon-back\">&#xe662;</i>\n            </div>\n            <div className=\"text\">\n              <h1 className=\"title\">{song.name}</h1>\n              <h1 className=\"subtitle\">{getName(song.ar)}</h1>\n            </div>\n          </Top>\n          <Middle ref={cdWrapperRef} onClick={toggleCurrentState}>\n            <CSSTransition\n              timeout={400}\n              classNames=\"fade\"\n              in={currentState !== \"lyric\"}\n            >\n              <CDWrapper\n                style={{\n                  visibility:\n                    currentState !== \"lyric\" ? \"visible\" : \"hidden\"\n                }}\n                playing={playing}\n              >\n                <div className={`needle ${playing? '' : 'pause'}`}></div>\n                <div className=\"cd\">\n                  <img\n                    className={`image play ${playing? '' : 'pause'}`}\n                    src={song.al.picUrl + \"?param=400x400\"}\n                    alt=\"\"\n                  />\n                </div>\n                {/* <CD playing={playing} image={song.al.picUrl + \"?param=300x300\"}></CD> */}\n                <p className=\"playing_lyric\">{currentPlayingLyric}</p>\n              </CDWrapper>\n            </CSSTransition>\n            <CSSTransition\n              timeout={400}\n              classNames=\"fade\"\n              in={currentState === \"lyric\"}\n            >\n              <LyricContainer>\n                <Scroll ref={lyricScrollRef}>\n                  <LyricWrapper\n                    style={{\n                      visibility:\n                        currentState === \"lyric\" ? \"visible\" : \"hidden\"\n                    }}\n                    className=\"lyric_wrapper\"\n                  >\n                    {\n                      currentLyric\n                        ? currentLyric.lines.map((item, index) => {\n                        lyricLineRefs.current[index] = React.createRef();\n                        return (\n                          <p\n                            className={`text ${\n                              currentLineNum === index ? \"current\" : \"\"\n                            }`}\n                            key={item + index}\n                            ref={lyricLineRefs.current[index]}\n                          >\n                            {item.txt}\n                          </p>\n                        );\n                      })\n                    : <p className=\"text pure\">纯音乐，请欣赏。</p>}\n                  </LyricWrapper>\n                </Scroll>\n              </LyricContainer>\n            </CSSTransition>\n          </Middle>\n          <Bottom className=\"bottom\">\n            {/* <List>\n              <span>倍速听歌</span>\n              {\n                list.map((item) => {\n                  return (\n                    <ListItem \n                      key={item.key}\n                      className={`${speed === item.key ? 'selected': ''}`} \n                      onClick={() => clickSpeed(item.key)}>\n                        {item.name}\n                    </ListItem>\n                  )\n                })\n              }\n            </List> */}\n            <ProgressWrapper>\n              <span className=\"time time-l\">{formatPlayTime(currentTime)}</span>\n              <div className=\"progress-bar-wrapper\">\n                <ProgressBar\n                  percent={percent}\n                  percentChange={onProgressChange}\n                ></ProgressBar>\n              </div>\n              <div className=\"time time-r\">{formatPlayTime(duration)}</div>\n            </ProgressWrapper>\n            <Operators>\n              <div className=\"icon i-left\" onClick={changeMode}>\n                <i\n                  className=\"iconfont\"\n                  dangerouslySetInnerHTML={{ __html: getPlayMode() }}\n                ></i>\n              </div>\n              <div className=\"icon i-left\" onClick={handlePrev}>\n                <i className=\"iconfont\">&#xe6e1;</i>\n              </div>\n              <div className=\"icon i-center\">\n                <i\n                  className=\"iconfont\"\n                  onClick={clickPlayingCB}\n                  dangerouslySetInnerHTML={{\n                    __html: playing ? \"&#xe723;\" : \"&#xe731;\"\n                  }}\n                ></i>\n              </div>\n              <div className=\"icon i-right\" onClick={handleNext}>\n                <i className=\"iconfont\">&#xe718;</i>\n              </div>\n              <div\n                className=\"icon i-right\"\n                onClick={() => togglePlayListDispatch(true)}\n              >\n                <i className=\"iconfont\">&#xe640;</i>\n              </div>\n            </Operators>\n          </Bottom>\n        </NormalPlayerContainer>\n      </CSSTransition>\n    );\n  }\n  \n  export default React.memo(NormalPlayer);\n  \n"]},"metadata":{},"sourceType":"module"}