{"ast":null,"code":"var _jsxFileName = \"/Users/macos/Desktop/react-music-webapp/src/application/Search/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport { Container } from './style';\nimport SearchBox from './../../baseUI/search-box/index';\nimport { connect } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Search(props) {\n  _s();\n\n  const [show, setShow] = useState(false);\n  const [query, setQuery] = useState('');\n  const {\n    hotList,\n    enterLoading,\n    suggestList: immutableSuggestList,\n    songsCount,\n    songsList: immutableSongsList\n  } = props;\n  const suggestList = immutableSuggestList.toJS();\n  const songsList = immutableSongsList.toJS();\n  const {\n    getHotKeyWordsDispatch,\n    changeEnterLoadingDispatch,\n    getSuggestListDispatch,\n    getSongDetailDispatch\n  } = props;\n  useEffect(() => {\n    setShow(true);\n  }, []);\n\n  const handleQuery = q => {\n    setQuery(q);\n    if (!q) return; // changeEnterLoadingDispatch(true);\n    // getSuggestListDispatch(q);\n  };\n\n  const searchBack = useCallback(() => {\n    setShow(false);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(CSSTransition, {\n    in: show,\n    timeout: 300,\n    appear: true,\n    classNames: \"fly\",\n    unmountOnExit: true,\n    onExited: () => props.history.goBack(),\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search_box_wrapper\",\n        children: /*#__PURE__*/_jsxDEV(SearchBox, {\n          back: searchBack,\n          newQuery: query,\n          handleQuery: handleQuery\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n} // 映射Redux全局的state到组件的props上\n\n\n_s(Search, \"7ffE1r58myOuGXRDrhcxX5/htKA=\");\n\n_c = Search;\n\nconst mapStateToProps = state => ({\n  hotList: state.getIn(['search', 'hotList']),\n  enterLoading: state.getIn(['search', 'enterLoading']),\n  suggestList: state.getIn(['search', 'suggestList']),\n  songsCount: state.getIn(['player', 'playList']).size,\n  songsList: state.getIn(['search', 'songsList'])\n}); // 映射dispatch到props上\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getHotKeyWordsDispatch() {\n      dispatch(getHotKeyWords());\n    },\n\n    changeEnterLoadingDispatch(data) {\n      dispatch(changeEnterLoading(data));\n    },\n\n    getSuggestListDispatch(data) {\n      dispatch(getSuggestList(data));\n    },\n\n    getSongDetailDispatch(id) {\n      dispatch(getSongDetail(id));\n    }\n\n  };\n}; // 将ui组件包装成容器组件\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)( /*#__PURE__*/React.memo(Search));\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/Users/macos/Desktop/react-music-webapp/src/application/Search/index.js"],"names":["React","useState","useEffect","useCallback","CSSTransition","Container","SearchBox","connect","Search","props","show","setShow","query","setQuery","hotList","enterLoading","suggestList","immutableSuggestList","songsCount","songsList","immutableSongsList","toJS","getHotKeyWordsDispatch","changeEnterLoadingDispatch","getSuggestListDispatch","getSongDetailDispatch","handleQuery","q","searchBack","history","goBack","mapStateToProps","state","getIn","size","mapDispatchToProps","dispatch","getHotKeyWords","data","changeEnterLoading","getSuggestList","id","getSongDetail","memo"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useCallback} from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport { Container } from './style';\nimport SearchBox from './../../baseUI/search-box/index';\nimport {connect} from 'react-redux'\n\n\n\nfunction Search (props) {\n    const [show, setShow] = useState (false);\n    const [query, setQuery] = useState('');\n\n    const {\n        hotList, \n        enterLoading, \n        suggestList: immutableSuggestList, \n        songsCount, \n        songsList: immutableSongsList\n      } = props;\n      \n      const suggestList = immutableSuggestList.toJS ();\n      const songsList = immutableSongsList.toJS ();\n      \n      const {\n        getHotKeyWordsDispatch,\n        changeEnterLoadingDispatch,\n        getSuggestListDispatch,\n        getSongDetailDispatch\n      } = props;\n    useEffect(() => {\n        setShow(true)\n    }, []);\n    const handleQuery = (q) => {\n        setQuery(q);\n        if(!q) return;\n        // changeEnterLoadingDispatch(true);\n        // getSuggestListDispatch(q);\n      }\n    const searchBack = useCallback(() => {\n        setShow (false);\n    }, [])\n    return (\n        <CSSTransition\n        in={show}\n        timeout={300}\n        appear={true}\n        classNames=\"fly\"\n        unmountOnExit\n        onExited={() => props.history.goBack ()}\n      >\n        <Container>\n            <div className=\"search_box_wrapper\">\n            <SearchBox  back={searchBack} newQuery={query} handleQuery={handleQuery}></SearchBox>\n            </div>\n        </Container>\n      </CSSTransition>\n    )\n}\n\n\n\n// 映射Redux全局的state到组件的props上\nconst mapStateToProps = (state) => ({\n    hotList: state.getIn(['search', 'hotList']),\n    enterLoading: state.getIn(['search', 'enterLoading']),\n    suggestList: state.getIn(['search', 'suggestList']),\n    songsCount: state.getIn(['player', 'playList']).size,\n    songsList: state.getIn(['search', 'songsList'])\n  });\n  \n  // 映射dispatch到props上\n  const mapDispatchToProps = (dispatch) => {\n    return {\n      getHotKeyWordsDispatch() {\n        dispatch(getHotKeyWords());\n      },\n      changeEnterLoadingDispatch(data) {\n        dispatch(changeEnterLoading(data))\n      },\n      getSuggestListDispatch(data) {\n        dispatch(getSuggestList(data));\n      },\n      getSongDetailDispatch(id) {\n        dispatch(getSongDetail(id));\n      }\n    }\n  };\n  \n  // 将ui组件包装成容器组件\n  export default connect(mapStateToProps, mapDispatchToProps)(React.memo(Search));"]},"metadata":{},"sourceType":"module"}