{"ast":null,"code":"var _jsxFileName = \"/Users/macos/Desktop/react-music-webapp/src/application/Search/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport { Container } from './style';\nimport SearchBox from './../../baseUI/search-box/index';\nimport { connect } from 'react-redux';\nimport { getHotKeyWords, changeEnterLoading, getSuggestList } from './store/actionCreators';\nimport { getRankListRequest } from '../../api/request';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Search(props) {\n  _s();\n\n  const [show, setShow] = useState(false);\n  const [query, setQuery] = useState('');\n  const {\n    hotList,\n    enterLoading,\n    suggestList: immutableSuggestList,\n    songsCount,\n    songsList: immutableSongsList\n  } = props;\n  const suggestList = immutableSuggestList.toJS();\n  const songsList = immutableSongsList.toJS();\n  const {\n    getHotKeyWordsDispatch,\n    changeEnterLoadingDispatch,\n    getSuggestListDispatch,\n    getSongDetailDispatch\n  } = props;\n  useEffect(() => {\n    setShow(true);\n  }, []);\n\n  const handleQuery = q => {\n    setQuery(q);\n    if (!q) return; // changeEnterLoadingDispatch(true);\n    // getSuggestListDispatch(q);\n  };\n\n  const renderHotKey = () => {\n    let list = hotList ? hotList : [];\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: list.map(item => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"item\",\n          onClick: () => setQuery(item.first),\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: item.first\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 33\n          }, this)\n        }, item.first, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this);\n  };\n\n  const searchBack = useCallback(() => {\n    setShow(false);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(CSSTransition, {\n    in: show,\n    timeout: 300,\n    appear: true,\n    classNames: \"fly\",\n    unmountOnExit: true,\n    onExited: () => props.history.goBack(),\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search_box_wrapper\",\n        children: /*#__PURE__*/_jsxDEV(SearchBox, {\n          back: searchBack,\n          newQuery: query,\n          handleQuery: handleQuery\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ShortcutWrapper, {\n        show: !query,\n        children: /*#__PURE__*/_jsxDEV(Scroll, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(HotKey, {\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                className: \"title\",\n                children: \" \\u70ED\\u95E8\\u641C\\u7D22 \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 25\n              }, this), renderHotKey()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n} // 映射 Redux 全局的 state 到组件的 props 上\n\n\n_s(Search, \"7ffE1r58myOuGXRDrhcxX5/htKA=\");\n\n_c = Search;\n\nconst mapStateToProps = state => ({\n  hotList: state.getIn(['search', 'hotList']),\n  enterLoading: state.getIn(['search', 'enterLoading']),\n  suggestList: state.getIn(['search', 'suggestList']),\n  songsCount: state.getIn(['player', 'playList']).size,\n  songsList: state.getIn(['search', 'songsList'])\n}); // 映射 dispatch 到 props 上\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getHotKeyWordsDispatch() {\n      dispatch(getHotKeyWords());\n    },\n\n    changeEnterLoadingDispatch(data) {\n      dispatch(changeEnterLoading(data));\n    },\n\n    getSuggestListDispatch(data) {\n      dispatch(getSuggestList(data));\n    }\n\n  };\n}; // 将ui组件包装成容器组件\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)( /*#__PURE__*/React.memo(Search));\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/Users/macos/Desktop/react-music-webapp/src/application/Search/index.js"],"names":["React","useState","useEffect","useCallback","CSSTransition","Container","SearchBox","connect","getHotKeyWords","changeEnterLoading","getSuggestList","getRankListRequest","Search","props","show","setShow","query","setQuery","hotList","enterLoading","suggestList","immutableSuggestList","songsCount","songsList","immutableSongsList","toJS","getHotKeyWordsDispatch","changeEnterLoadingDispatch","getSuggestListDispatch","getSongDetailDispatch","handleQuery","q","renderHotKey","list","map","item","first","searchBack","history","goBack","mapStateToProps","state","getIn","size","mapDispatchToProps","dispatch","data","memo"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useCallback} from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport { Container } from './style';\nimport SearchBox from './../../baseUI/search-box/index';\nimport {connect} from 'react-redux'\nimport { getHotKeyWords, changeEnterLoading, getSuggestList } from './store/actionCreators';\nimport { getRankListRequest } from '../../api/request';\n\n\nfunction Search (props) {\n    const [show, setShow] = useState (false);\n    const [query, setQuery] = useState('');\n\n    const {\n        hotList, \n        enterLoading, \n        suggestList: immutableSuggestList, \n        songsCount, \n        songsList: immutableSongsList\n      } = props;\n      \n      const suggestList = immutableSuggestList.toJS ();\n      const songsList = immutableSongsList.toJS ();\n      \n      const {\n        getHotKeyWordsDispatch,\n        changeEnterLoadingDispatch,\n        getSuggestListDispatch,\n        getSongDetailDispatch\n      } = props;\n    useEffect(() => {\n        setShow(true)\n    }, []);\n    const handleQuery = (q) => {\n        setQuery(q);\n        if(!q) return;\n        // changeEnterLoadingDispatch(true);\n        // getSuggestListDispatch(q);\n      }\n\n    const renderHotKey = () => {\n        let list = hotList? hotList : [];\n        return (\n            <ul>\n                {\n                    list.map(item => {\n                        return (\n                            <li className=\"item\" key={item.first} onClick={() => setQuery (item.first)}>\n                                <span>{item.first}</span>\n                            </li>\n                        )\n                    })\n                }\n            </ul>\n        )\n    }\n    const searchBack = useCallback(() => {\n        setShow (false);\n    }, [])\n    return (\n        <CSSTransition\n        in={show}\n        timeout={300}\n        appear={true}\n        classNames=\"fly\"\n        unmountOnExit\n        onExited={() => props.history.goBack ()}\n      >\n        <Container>\n            <div className=\"search_box_wrapper\">\n            <SearchBox  back={searchBack} newQuery={query} handleQuery={handleQuery}></SearchBox>\n            </div>\n            <ShortcutWrapper show={!query}>\n                <Scroll>\n                    <div>\n                    <HotKey>\n                        <h1 className=\"title\"> 热门搜索 </h1>\n                        {renderHotKey ()}\n                    </HotKey>\n                    </div>\n                </Scroll>\n            </ShortcutWrapper>\n        </Container>\n      </CSSTransition>\n    )\n}\n\n\n\n// 映射 Redux 全局的 state 到组件的 props 上\nconst mapStateToProps = (state) => ({\n    hotList: state.getIn (['search', 'hotList']),\n    enterLoading: state.getIn (['search', 'enterLoading']),\n    suggestList: state.getIn (['search', 'suggestList']),\n    songsCount: state.getIn (['player', 'playList']).size,\n    songsList: state.getIn (['search', 'songsList'])\n  });\n  \n  // 映射 dispatch 到 props 上\n  const mapDispatchToProps = (dispatch) => {\n    return {\n      getHotKeyWordsDispatch () {\n        dispatch (getHotKeyWords ());\n      },\n      changeEnterLoadingDispatch (data) {\n        dispatch (changeEnterLoading (data))\n      },\n      getSuggestListDispatch (data) {\n        dispatch (getSuggestList (data));\n      },\n    }\n  };\n  \n  // 将ui组件包装成容器组件\n  export default connect(mapStateToProps, mapDispatchToProps)(React.memo(Search));"]},"metadata":{},"sourceType":"module"}