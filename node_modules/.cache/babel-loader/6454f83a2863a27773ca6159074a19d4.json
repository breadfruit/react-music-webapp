{"ast":null,"code":"var _jsxFileName = \"/Users/macos/Desktop/react-music-webapp/src/baseUI/progressBar/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport style from '../../assets/global-style';\nimport { prefixStyle } from './../../api/utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProgressBarWrapper = styled.div`\n  height: 30px;\n  .bar-inner{\n    position: relative;\n    top: 13px;\n    height: 4px;\n    background: rgba(0, 0, 0, .3);\n    .progress{\n      position: absolute;\n      height: 100%;\n      background: ${style[\"theme-color\"]};\n    }\n    .progress-btn-wrapper{\n      position: absolute;\n      left: -8px;\n      top: -13px;\n      width: 30px;\n      height: 30px;\n      .progress-btn{\n        position: relative;\n        top: 7px;\n        left: 7px;\n        box-sizing: border-box;\n        width: 16px;\n        height: 16px;\n        border: 3px solid ${style[\"border-color\"]};\n        border-radius: 50%;\n        background: ${style[\"theme-color\"]};\n      }\n    }\n  }\n`;\n_c = ProgressBarWrapper;\n\nfunction ProgressBar(props) {\n  _s();\n\n  const progressBar = useRef();\n  const progress = useRef();\n  const progressBtn = useRef();\n  const [touch, setTouch] = useState({});\n  const {\n    percent\n  } = props;\n  const transform = prefixStyle('transform');\n  const {\n    percentChange\n  } = props;\n  const progressBtnWidth = 16;\n  useEffect(() => {\n    if (percent >= 0 && percent <= 1 && !touch.initiated) {\n      const barWidth = progressBar.current.clientWidth - progressBtnWidth;\n      const offsetWidth = percent * barWidth;\n      progress.current.style.width = `${offsetWidth}px`;\n      progressBtn.current.style[transform] = `translate3d(${offsetWidth}px, 0, 0)`;\n    } // eslint-disable-next-line\n\n  }, [percent]);\n\n  const _offset = offsetWidth => {\n    progress.current.style.width = `${offsetWidth}px`;\n    progressBtn.current.style.transform = `translate3d(${offsetWidth}px, 0, 0)`;\n  };\n\n  const _changePercent = () => {\n    const barWidth = progressBar.current.clientWidth - progressBtnWidth;\n    const curPercent = progress.current.clientWidth / barWidth;\n    percentChange(curPercent);\n  };\n\n  const progressClick = e => {\n    const rect = progressBar.current.getBoundingClientRect();\n    console.log('rect', rect);\n    const offsetWidth = e.pageX - rect.left;\n\n    _offset(offsetWidth);\n\n    _changePercent();\n  };\n\n  const progressTouchEnd = e => {\n    console.log('progressTouchEnd', e);\n    const endTouch = JSON.parse(JSON.stringify(touch));\n    endTouch.initiated = false;\n    setTouch(endTouch);\n\n    _changePercent();\n  };\n\n  const progressTouchStart = e => {\n    const startTouch = {}; //可以操作\n\n    startTouch.initiated = true; //相对于文档页面偏移距离\n\n    startTouch.startX = e.touches[0].pageX; //当前进度\n\n    startTouch.left = progress.current.clientWidth;\n    setTouch(startTouch);\n  }; //当前进度进行偏移,过渡，transform有兼容性问题\n\n\n  const progressTouchMove = e => {\n    if (!touch.initiated) return; //计算触摸前后的距离\n\n    const deltaX = e.touches[0].pageX - touch.startX; //当前最长的进度必须考虑到按钮的宽度，不能计算在内\n\n    const barWidth = progressBar.current.clientWidth - progressBtnWidth; //考虑临界情况，取最小值\n\n    const offsetWidth = Math.min(Math.max(0, touch.left + deltaX), barWidth); //进行数据更新\n\n    _offset(offsetWidth);\n  };\n\n  return /*#__PURE__*/_jsxDEV(ProgressBarWrapper, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bar-inner\",\n      ref: progressBar,\n      onClick: progressClick,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress\",\n        ref: progress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-btn-wrapper\",\n        ref: progressBtn,\n        onTouchStart: progressTouchStart,\n        onTouchMove: progressTouchMove,\n        onTouchEnd: progressTouchEnd,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-btn\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ProgressBar, \"h9SHYgldj9ssYv9D2L96Z//wx2o=\");\n\n_c2 = ProgressBar;\nexport default _c3 = /*#__PURE__*/React.memo(ProgressBar);\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"ProgressBarWrapper\");\n$RefreshReg$(_c2, \"ProgressBar\");\n$RefreshReg$(_c3, \"%default%\");","map":{"version":3,"sources":["/Users/macos/Desktop/react-music-webapp/src/baseUI/progressBar/index.js"],"names":["React","useEffect","useRef","useState","styled","style","prefixStyle","ProgressBarWrapper","div","ProgressBar","props","progressBar","progress","progressBtn","touch","setTouch","percent","transform","percentChange","progressBtnWidth","initiated","barWidth","current","clientWidth","offsetWidth","width","_offset","_changePercent","curPercent","progressClick","e","rect","getBoundingClientRect","console","log","pageX","left","progressTouchEnd","endTouch","JSON","parse","stringify","progressTouchStart","startTouch","startX","touches","progressTouchMove","deltaX","Math","min","max","memo"],"mappings":"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","sourcesContent":["import React, {useEffect, useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport style from '../../assets/global-style';\nimport { prefixStyle } from './../../api/utils';\n\nconst ProgressBarWrapper = styled.div`\n  height: 30px;\n  .bar-inner{\n    position: relative;\n    top: 13px;\n    height: 4px;\n    background: rgba(0, 0, 0, .3);\n    .progress{\n      position: absolute;\n      height: 100%;\n      background: ${style[\"theme-color\"]};\n    }\n    .progress-btn-wrapper{\n      position: absolute;\n      left: -8px;\n      top: -13px;\n      width: 30px;\n      height: 30px;\n      .progress-btn{\n        position: relative;\n        top: 7px;\n        left: 7px;\n        box-sizing: border-box;\n        width: 16px;\n        height: 16px;\n        border: 3px solid ${style[\"border-color\"]};\n        border-radius: 50%;\n        background: ${style[\"theme-color\"]};\n      }\n    }\n  }\n`\n\nfunction ProgressBar(props){\n    const progressBar = useRef();\n    const progress = useRef();\n    const progressBtn = useRef();\n    const [touch, setTouch] = useState({});\n\n    const { percent } = props;\n\n    const transform = prefixStyle('transform');\n    const { percentChange } = props;\n    const progressBtnWidth = 16;  \n\n    useEffect(() => {\n        if(percent >= 0 && percent <= 1 && !touch.initiated) {\n        const barWidth = progressBar.current.clientWidth - progressBtnWidth;\n        const offsetWidth = percent * barWidth;\n        progress.current.style.width = `${offsetWidth}px`;\n        progressBtn.current.style[transform] = `translate3d(${offsetWidth}px, 0, 0)`;\n        }\n        // eslint-disable-next-line\n    }, [percent])\n\n    const _offset = (offsetWidth) => {\n        progress.current.style.width = `${offsetWidth}px`;\n        progressBtn.current.style.transform = `translate3d(${offsetWidth}px, 0, 0)`;\n    }\n\n      const _changePercent = () => {\n        const barWidth = progressBar.current.clientWidth - progressBtnWidth;\n        const curPercent = progress.current.clientWidth / barWidth;\n        percentChange(curPercent);\n      }\n\n    const progressClick = (e) => {\n        const rect = progressBar.current.getBoundingClientRect();\n        console.log('rect', rect)\n        const offsetWidth = e.pageX - rect.left;\n        _offset(offsetWidth);\n        _changePercent();\n    }\n\n\n  const progressTouchEnd = (e) => {\n    console.log('progressTouchEnd', e)\n    const endTouch = JSON.parse(JSON.stringify(touch));\n    endTouch.initiated = false;\n    setTouch(endTouch);\n     _changePercent();\n  }\n\n  const progressTouchStart = (e) => {\n      const startTouch = {};\n      //可以操作\n      startTouch.initiated = true;\n      //相对于文档页面偏移距离\n      startTouch.startX = e.touches[0].pageX;\n      //当前进度\n      startTouch.left = progress.current.clientWidth;\n      setTouch(startTouch)\n  }\n\n  //当前进度进行偏移,过渡，transform有兼容性问题\n  const progressTouchMove = (e) => {\n    if(!touch.initiated) return;\n    //计算触摸前后的距离\n    const deltaX = e.touches[0].pageX - touch.startX;\n    //当前最长的进度必须考虑到按钮的宽度，不能计算在内\n    const barWidth = progressBar.current.clientWidth - progressBtnWidth;\n    //考虑临界情况，取最小值\n    const offsetWidth = Math.min(Math.max(0, touch.left + deltaX), barWidth)\n    //进行数据更新\n    _offset(offsetWidth)\n\n  }\n\n\n\n  return (\n    <ProgressBarWrapper>\n      <div className=\"bar-inner\" ref={progressBar} onClick={progressClick}>\n        <div className=\"progress\" ref={progress}></div>\n        <div className=\"progress-btn-wrapper\" ref={progressBtn}\n            onTouchStart={progressTouchStart}\n            onTouchMove={progressTouchMove}\n            onTouchEnd={progressTouchEnd}\n        >\n          <div className=\"progress-btn\"></div>\n        </div>\n      </div>\n    </ProgressBarWrapper>\n  )\n}\n\nexport default React.memo(ProgressBar);"]},"metadata":{},"sourceType":"module"}