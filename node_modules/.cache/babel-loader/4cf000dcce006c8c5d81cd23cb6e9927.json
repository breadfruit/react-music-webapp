{"ast":null,"code":"var _jsxFileName = \"/Users/macos/Desktop/react-music-webapp/src/application/Player/normalPlayer/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect, useCallback } from \"react\";\nimport { CSSTransition } from \"react-transition-group\";\nimport { getName, prefixStyle } from \"../../../api/utils\";\nimport animations from \"create-keyframe-animation\";\nimport { NormalPlayerContainer, Top, Middle, Bottom, Operators, CDWrapper, ProgressWrapper } from \"./style\";\nimport ProgressBar from '../../../baseUI/progressBar/index';\nimport { formatPlayTime } from '../../../api/utils';\nimport { playMode } from '../../../api/config';\nimport { LyricContainer, LyricWrapper } from \"./style\";\nimport Scroll from \"../../../baseUI/scroll\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction NormalPlayer(props) {\n  _s();\n\n  const {\n    song,\n    fullScreen,\n    playing,\n    percent,\n    duration,\n    currentTime,\n    handlePrev,\n    handleNext,\n    mode\n  } = props;\n  const {\n    toggleFullScreen,\n    clickPlaying,\n    onProgressChange,\n    changeMode,\n    togglePlayList\n  } = props; //js帧动画\n\n  const {\n    currentLineNum,\n    currentPlayingLyric,\n    currentLyric\n  } = props;\n  const normalPlayerRef = useRef();\n  const cdWrapperRef = useRef();\n  const currentState = useRef(\"\");\n  const lyricScrollRef = useRef();\n  const lyricLineRefs = useRef([]); //处理transform的浏览器兼容问题\n\n  const transform = prefixStyle(\"transform\");\n\n  const _getPosAndScale = () => {\n    const targetWidth = 40;\n    const paddingLeft = 40;\n    const paddingBottom = 30;\n    const paddingTop = 80;\n    const width = window.innerWidth * 0.8;\n    const scale = targetWidth / width; // 两个圆心的横坐标距离和纵坐标距离\n\n    const x = -(window.innerWidth / 2 - paddingLeft);\n    const y = window.innerHeight - paddingTop - width / 2 - paddingBottom;\n    return {\n      x,\n      y,\n      scale\n    };\n  };\n\n  const enter = () => {\n    normalPlayerRef.current.style.display = \"block\";\n\n    const {\n      x,\n      y,\n      scale\n    } = _getPosAndScale();\n\n    let animation = {\n      0: {\n        transform: `translate3d(${x}px,${y}px,0) scale(${scale})`\n      },\n      60: {\n        transform: `translate3d(0, 0, 0) scale(1.1)`\n      },\n      100: {\n        transform: `translate3d(0, 0, 0) scale(1)`\n      }\n    };\n    animations.registerAnimation({\n      name: \"move\",\n      animation,\n      presets: {\n        duration: 400,\n        easing: \"linear\"\n      }\n    });\n    animations.runAnimation(cdWrapperRef.current, \"move\");\n  };\n\n  const afterEnter = () => {\n    const cdWrapperDom = cdWrapperRef.current;\n    animations.unregisterAnimation(\"move\");\n    cdWrapperDom.style.animation = \"\";\n  };\n\n  const leave = () => {\n    if (!cdWrapperRef.current) return;\n    const cdWrapperDom = cdWrapperRef.current;\n    cdWrapperDom.style.transition = \"all 0.4s\";\n\n    const {\n      x,\n      y,\n      scale\n    } = _getPosAndScale();\n\n    cdWrapperDom.style[transform] = `translate3d (${x} px, ${y} px, 0) scale (${scale})`;\n  };\n\n  const afterLeave = () => {\n    if (!cdWrapperRef.current) return;\n    const cdWrapperDom = cdWrapperRef.current;\n    cdWrapperDom.style.transition = \"\";\n    cdWrapperDom.style[transform] = \"\"; // 一定要注意现在要把 normalPlayer 这个 DOM 给隐藏掉，因为 CSSTransition 的工作只是把动画执行一遍 \n    // 不置为 none 现在全屏播放器页面还是存在\n\n    normalPlayerRef.current.style.display = \"none\";\n  };\n\n  const getPlayMode = () => {\n    let content;\n    console.log('getplaymode', mode);\n\n    if (mode === playMode.sequence) {\n      content = \"&#xe625;\";\n    } else if (mode === playMode.loop) {\n      content = \"&#xe653;\";\n    } else {\n      content = \"&#xe61b;\";\n    }\n\n    console.log('getplaymode里面的content', content);\n    return content;\n  };\n\n  return /*#__PURE__*/_jsxDEV(CSSTransition, {\n    classNames: \"normal\",\n    in: fullScreen,\n    timeout: 400,\n    mountOnEnter: true,\n    onEnter: enter,\n    onEntered: afterEnter,\n    onExit: leave,\n    onExited: afterLeave,\n    children: /*#__PURE__*/_jsxDEV(NormalPlayerContainer, {\n      ref: normalPlayerRef,\n      mode: mode,\n      changeMode: changeMode,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"background\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: song.al.picUrl + \"?param=300x300\",\n          width: \"100%\",\n          height: \"100%\",\n          alt: \"\\u6B4C\\u66F2\\u56FE\\u7247\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"background layer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Top, {\n        className: \"top\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"back\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"iconfont icon-back\",\n            children: \"\\uE662\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"title\",\n            children: song.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"subtitle\",\n            children: getName(song.ar)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Middle, {\n        ref: cdWrapperRef,\n        onClick: toggleCurrentState,\n        children: [/*#__PURE__*/_jsxDEV(CSSTransition, {\n          timeout: 400,\n          classNames: \"fade\",\n          in: currentState.current !== \"lyric\",\n          children: /*#__PURE__*/_jsxDEV(CDWrapper, {\n            style: {\n              visibility: currentState.current !== \"lyric\" ? \"visible\" : \"hidden\"\n            },\n            children: [\"// \\u5176\\u4F59\\u8DDF\\u4EE5\\u524D\\u4FDD\\u6301\\u4E00\\u81F4\", /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"playing_lyric\",\n              children: currentPlayingLyric\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CSSTransition, {\n          timeout: 400,\n          classNames: \"fade\",\n          in: currentState.current === \"lyric\",\n          children: /*#__PURE__*/_jsxDEV(LyricContainer, {\n            children: /*#__PURE__*/_jsxDEV(Scroll, {\n              ref: lyricScrollRef,\n              children: /*#__PURE__*/_jsxDEV(LyricWrapper, {\n                style: {\n                  visibility: currentState.current === \"lyric\" ? \"visible\" : \"hidden\"\n                },\n                className: \"lyric_wrapper\",\n                children: currentLyric ? currentLyric.lines.map((item, index) => {\n                  // 拿到每一行歌词的 DOM 对象，后面滚动歌词需要！ \n                  lyricLineRefs.current[index] = /*#__PURE__*/React.createRef();\n                  return /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: `text ${currentLineNum === index ? \"current\" : \"\"}`,\n                    ref: lyricLineRefs.current[index],\n                    children: item.txt\n                  }, item + index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 181,\n                    columnNumber: 53\n                  }, this);\n                }) : /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text pure\",\n                  children: \" \\u7EAF\\u97F3\\u4E50\\uFF0C\\u8BF7\\u6B23\\u8D4F\\u3002\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 191,\n                  columnNumber: 47\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Bottom, {\n        className: \"bottom\",\n        children: [/*#__PURE__*/_jsxDEV(ProgressWrapper, {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"time time-l\",\n            children: formatPlayTime(currentTime)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-bar-wrapper\",\n            children: /*#__PURE__*/_jsxDEV(ProgressBar, {\n              percent: percent,\n              percentChange: onProgressChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"time time-r\",\n            children: formatPlayTime(duration)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Operators, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"icon i-left\",\n            onClick: changeMode,\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"iconfont\",\n              dangerouslySetInnerHTML: {\n                __html: getPlayMode()\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"icon i-left\",\n            onClick: handlePrev,\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"iconfont\",\n              children: \"\\uE6E1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"icon i-center\",\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"iconfont\",\n              onClick: e => clickPlaying(e, !playing),\n              dangerouslySetInnerHTML: {\n                __html: playing ? \"&#xe723;\" : \"&#xe731;\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"icon i-right\",\n            onClick: handleNext,\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"iconfont\",\n              children: \"\\uE718\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"icon i-right\",\n            onClick: () => togglePlayList(true),\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"iconfont\",\n              children: \"\\uE640\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 9\n  }, this);\n}\n\n_s(NormalPlayer, \"F6DJrBkcCUwx+PVJVRNJrXmqlDE=\");\n\n_c = NormalPlayer;\nexport default _c2 = /*#__PURE__*/React.memo(NormalPlayer);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"NormalPlayer\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/macos/Desktop/react-music-webapp/src/application/Player/normalPlayer/index.js"],"names":["React","useState","useRef","useEffect","useCallback","CSSTransition","getName","prefixStyle","animations","NormalPlayerContainer","Top","Middle","Bottom","Operators","CDWrapper","ProgressWrapper","ProgressBar","formatPlayTime","playMode","LyricContainer","LyricWrapper","Scroll","NormalPlayer","props","song","fullScreen","playing","percent","duration","currentTime","handlePrev","handleNext","mode","toggleFullScreen","clickPlaying","onProgressChange","changeMode","togglePlayList","currentLineNum","currentPlayingLyric","currentLyric","normalPlayerRef","cdWrapperRef","currentState","lyricScrollRef","lyricLineRefs","transform","_getPosAndScale","targetWidth","paddingLeft","paddingBottom","paddingTop","width","window","innerWidth","scale","x","y","innerHeight","enter","current","style","display","animation","registerAnimation","name","presets","easing","runAnimation","afterEnter","cdWrapperDom","unregisterAnimation","leave","transition","afterLeave","getPlayMode","content","console","log","sequence","loop","al","picUrl","ar","toggleCurrentState","visibility","lines","map","item","index","createRef","txt","__html","e","memo"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect, useCallback } from \"react\";\nimport { CSSTransition } from \"react-transition-group\";\nimport { getName, prefixStyle } from \"../../../api/utils\";\nimport animations from \"create-keyframe-animation\";\nimport {\n    NormalPlayerContainer,\n    Top,\n    Middle,\n    Bottom,\n    Operators,\n    CDWrapper,\n    ProgressWrapper,\n} from \"./style\";\nimport ProgressBar from '../../../baseUI/progressBar/index'\nimport { formatPlayTime } from '../../../api/utils'\nimport { playMode } from '../../../api/config';\nimport { LyricContainer, LyricWrapper } from \"./style\";\nimport Scroll from \"../../../baseUI/scroll\";\nfunction NormalPlayer(props) {\n    const { song, fullScreen, playing, percent, duration, currentTime, handlePrev, handleNext, mode } = props;\n    const { toggleFullScreen, clickPlaying, onProgressChange, changeMode, togglePlayList } = props;\n    //js帧动画\n    const {\n        currentLineNum,\n        currentPlayingLyric,\n        currentLyric\n    } = props;\n    const normalPlayerRef = useRef();\n    const cdWrapperRef = useRef();\n\n\n    const currentState = useRef(\"\");\n    const lyricScrollRef = useRef();\n    const lyricLineRefs = useRef([]);\n\n    //处理transform的浏览器兼容问题\n    const transform = prefixStyle(\"transform\");\n\n    const _getPosAndScale = () => {\n        const targetWidth = 40;\n        const paddingLeft = 40;\n        const paddingBottom = 30;\n        const paddingTop = 80;\n        const width = window.innerWidth * 0.8;\n        const scale = targetWidth / width;\n        // 两个圆心的横坐标距离和纵坐标距离\n        const x = -(window.innerWidth / 2 - paddingLeft);\n        const y = window.innerHeight - paddingTop - width / 2 - paddingBottom;\n        return {\n            x,\n            y,\n            scale\n        };\n    };\n\n    const enter = () => {\n        normalPlayerRef.current.style.display = \"block\";\n        const { x, y, scale } = _getPosAndScale();\n        let animation = {\n            0: {\n                transform: `translate3d(${x}px,${y}px,0) scale(${scale})`\n            },\n            60: {\n                transform: `translate3d(0, 0, 0) scale(1.1)`\n            },\n            100: {\n                transform: `translate3d(0, 0, 0) scale(1)`\n            }\n        };\n        animations.registerAnimation({\n            name: \"move\",\n            animation,\n            presets: {\n                duration: 400,\n                easing: \"linear\"\n            }\n        });\n        animations.runAnimation(cdWrapperRef.current, \"move\");\n    };\n\n    const afterEnter = () => {\n        const cdWrapperDom = cdWrapperRef.current;\n        animations.unregisterAnimation(\"move\");\n        cdWrapperDom.style.animation = \"\";\n    };\n\n    const leave = () => {\n        if (!cdWrapperRef.current) return;\n        const cdWrapperDom = cdWrapperRef.current;\n        cdWrapperDom.style.transition = \"all 0.4s\";\n        const { x, y, scale } = _getPosAndScale();\n        cdWrapperDom.style[transform] = `translate3d (${x} px, ${y} px, 0) scale (${scale})`;\n    };\n\n    const afterLeave = () => {\n        if (!cdWrapperRef.current) return;\n        const cdWrapperDom = cdWrapperRef.current;\n        cdWrapperDom.style.transition = \"\";\n        cdWrapperDom.style[transform] = \"\";\n        // 一定要注意现在要把 normalPlayer 这个 DOM 给隐藏掉，因为 CSSTransition 的工作只是把动画执行一遍 \n        // 不置为 none 现在全屏播放器页面还是存在\n        normalPlayerRef.current.style.display = \"none\";\n    };\n\n\n    const getPlayMode = () => {\n        let content;\n        console.log('getplaymode', mode)\n        if (mode === playMode.sequence) {\n            content = \"&#xe625;\";\n        } else if (mode === playMode.loop) {\n            content = \"&#xe653;\";\n        } else {\n            content = \"&#xe61b;\";\n        }\n        console.log('getplaymode里面的content', content)\n        return content;\n    };\n\n    return (\n        <CSSTransition\n            classNames=\"normal\"\n            in={fullScreen}\n            timeout={400}\n            mountOnEnter\n            onEnter={enter}\n            onEntered={afterEnter}\n            onExit={leave}\n            onExited={afterLeave}\n        >\n            <NormalPlayerContainer\n                ref={normalPlayerRef}\n                mode={mode}\n                changeMode={changeMode}>\n                <div className=\"background\">\n                    <img\n                        src={song.al.picUrl + \"?param=300x300\"}\n                        width=\"100%\"\n                        height=\"100%\"\n                        alt=\"歌曲图片\"\n                    />\n                </div>\n                <div className=\"background layer\"></div>\n                <Top className=\"top\">\n                    <div className=\"back\">\n                        <i className=\"iconfont icon-back\">&#xe662;</i>\n                    </div>\n                    <div className=\"text\">\n                        <h1 className=\"title\">{song.name}</h1>\n                        <h1 className=\"subtitle\">{getName(song.ar)}</h1>\n                    </div>\n                </Top>\n                <Middle ref={cdWrapperRef} onClick={toggleCurrentState}>\n                    <CSSTransition\n                        timeout={400}\n                        classNames=\"fade\"\n                        in={currentState.current !== \"lyric\"}\n                    >\n                        <CDWrapper style={{ visibility: currentState.current !== \"lyric\" ? \"visible\" : \"hidden\" }}>\n      // 其余跟以前保持一致\n                            <p className=\"playing_lyric\">{currentPlayingLyric}</p>\n                        </CDWrapper>\n                    </CSSTransition>\n                    <CSSTransition\n                        timeout={400}\n                        classNames=\"fade\"\n                        in={currentState.current === \"lyric\"}\n                    >\n                        <LyricContainer>\n                            <Scroll ref={lyricScrollRef}>\n                                <LyricWrapper\n                                    style={{ visibility: currentState.current === \"lyric\" ? \"visible\" : \"hidden\" }}\n                                    className=\"lyric_wrapper\"\n                                >\n                                    {\n                                        currentLyric\n                                            ? currentLyric.lines.map((item, index) => {\n                                                // 拿到每一行歌词的 DOM 对象，后面滚动歌词需要！ \n                                                lyricLineRefs.current[index] = React.createRef();\n                                                return (\n                                                    <p\n                                                        className={`text ${currentLineNum === index ? \"current\" : \"\"\n                                                            }`}\n                                                        key={item + index}\n                                                        ref={lyricLineRefs.current[index]}\n                                                    >\n                                                        {item.txt}\n                                                    </p>\n                                                );\n                                            })\n                                            : <p className=\"text pure\"> 纯音乐，请欣赏。</p>}\n                                </LyricWrapper>\n                            </Scroll>\n                        </LyricContainer>\n                    </CSSTransition>\n                </Middle>\n                <Bottom className=\"bottom\">\n                    <ProgressWrapper>\n                        <span className=\"time time-l\">{formatPlayTime(currentTime)}</span>\n                        <div className=\"progress-bar-wrapper\">\n                            <ProgressBar\n                                percent={percent}\n                                percentChange={onProgressChange}\n                            ></ProgressBar>\n                        </div>\n                        <div className=\"time time-r\">{formatPlayTime(duration)}</div>\n                    </ProgressWrapper>\n                    <Operators>\n                        <div className=\"icon i-left\" onClick={changeMode}>\n                            <i\n                                className=\"iconfont\"\n                                dangerouslySetInnerHTML={{ __html: getPlayMode() }}\n                            ></i>\n                        </div>\n                        <div className=\"icon i-left\" onClick={handlePrev}>\n                            <i className=\"iconfont\">&#xe6e1;</i>\n                        </div>\n                        <div className=\"icon i-center\">\n                            <i\n                                className=\"iconfont\"\n                                onClick={e => clickPlaying(e, !playing)}\n                                dangerouslySetInnerHTML={{\n                                    __html: playing ? \"&#xe723;\" : \"&#xe731;\"\n                                }}\n                            ></i>\n                        </div>\n                        <div className=\"icon i-right\" onClick={handleNext}>\n                            <i className=\"iconfont\">&#xe718;</i>\n                        </div>\n                        <div className=\"icon i-right\" onClick={() => togglePlayList(true)} >\n                            <i className=\"iconfont\">&#xe640;</i>\n                        </div>\n                    </Operators>\n                </Bottom>\n            </NormalPlayerContainer>\n        </CSSTransition>\n    );\n}\n\nexport default React.memo(NormalPlayer);\n"]},"metadata":{},"sourceType":"module"}