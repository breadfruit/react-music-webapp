{"ast":null,"code":"import axios from 'axios';\nimport { axiosInstance } from \"./config\";\nconst CancelToken = axios.CancelToken;\nconst source = CancelToken.source(); //获取轮播图\n\nexport const getBannerRequest = () => {\n  return axiosInstance.get('/getDigitalAlbumLists');\n}; // export const  getBannerRequest = () => {\n//   return axiosInstance.get('/banner', {\n//     cancelToken: source.token\n//   }).catch(function(thrown) {\n//       if(axios.isCancel(thrown)) {\n//           console.log('Request canceled', thrown.message)\n//       } else {\n//           // handle error\n//       }\n//   })\n// }\n//获取推荐歌单\n\nexport const getRecommendListRequest = () => {\n  return axiosInstance.get('/getRecommend');\n}; //实现取消发送\n// export const getRecommendListRequest = () => {\n//     return axiosInstance.get('/personalized', {\n//       cancelToken: source.token\n//     }).catch(function(thrown) {\n//         if(axios.isCancel(thrown)) {\n//             console.log('Request canceled', thrown.message)\n//         } else {\n//             // handle error\n//         }\n//     })\n// }\n// source.cancel('取消上次请求')\n//获取热门歌手\n//可选参数 : limit: 取出数量 , 默认为 50\n//offset: 偏移数量 , 用于分页 , 如 :( 页数 -1)*50, 其中 50 为 limit 的值 , 默认 \n\nexport const getHotSingerListRequest = count => {\n  return axiosInstance.get(`/top/artists?offset=${count}`);\n}; //歌手分类列表\n//localhost:4000/artist/list?type=1&area=7&initial=b\n//type 取值: -1:全部 1:男歌手 2:女歌手 3:乐队\n//area 取值: -1:全部 7华语 96欧美 8:日本 0:其他\n//initial取值: 名字首字母\n//limit   默认30\n//offset : 偏移数量 如 : 如 :( 页数 -1)*30, 其中 30 为 limit 的值 \n\nexport const getSingerListRequest = (area, initial, offset) => {\n  return axiosInstance.get(`/artist/list?area=${area.toLowerCase()}&initial=${initial}&offset=${offset}`);\n}; //获取排行榜\n\nexport const getRankListRequest = () => {\n  return axiosInstance.get(`/toplist/detail`);\n}; //获取歌单详情\n// 必选参数 : id : 歌单 id\n//可选参数 : s : 歌单最近的 s 个收藏者,默认为8\n\nexport const getAlbumDetailRequest = id => {\n  return axiosInstance.get(`/getSongListDetail?disstid=${id}`);\n}; //获取单个歌曲播放链接\n\nexport const getOneMusicPlayerRequest = mid => {\n  //例子getMusicPlay/songmid=0025NhlN2yWrP4s\n  return axiosInstance.get(`/getMusicPlay/songmid=${mid}`);\n}; //获取多个歌曲播放链接\n\nexport const getMoreMusicPlayerRequest = sonListStr => {\n  //  return axiosInstance.get(`/getMusicPlay/songmid=${sonListStr}&resType=all`)\n  return axiosInstance.get('/getMusicPlay/songmid=' + sonListStr + '&resType=all');\n}; //获取歌手详情\n\nexport const getSingerInfoRequest = id => {\n  return axiosInstance.get(`/artists?id=${id}`);\n}; //顶部的高度\n\nexport const HEADER_HEIGHT = 45; //播放器开发\n//获取歌曲歌词\n\nexport const getLyricRequest = id => {\n  return axiosInstance.get(`/lyric?id=${id}`);\n};\nexport const getSongDetailRequest = id => {\n  return axiosInstance.get(`/song/detail?ids=${id}`);\n};\nexport const getHotKeyWordsRequest = () => {\n  return axiosInstance.get(`/search/hot`);\n};\nexport const getSuggestListRequest = query => {\n  return axiosInstance.get(`/search/suggest?keywords = ${query}`);\n};\nexport const getResultSongsListRequest = query => {\n  return axiosInstance.get(`/search?keywords=${query}`);\n}; //手机号码登录\n\nexport const getLoginByPhoneRequest = query => {\n  return axiosInstance.post(`/login/cellphone`);\n}; //邮箱密码登录\n\nexport const getLoginByEmailRequest = query => {\n  return axiosInstance.post();\n}; //二维码扫码登录\n\nexport const getLoginByQRRequest = () => {}; //注册\n\nexport const getResigterRequest = () => {};","map":{"version":3,"sources":["/Users/macos/Desktop/react-music-webapp/src/api/request.js"],"names":["axios","axiosInstance","CancelToken","source","getBannerRequest","get","getRecommendListRequest","getHotSingerListRequest","count","getSingerListRequest","area","initial","offset","toLowerCase","getRankListRequest","getAlbumDetailRequest","id","getOneMusicPlayerRequest","mid","getMoreMusicPlayerRequest","sonListStr","getSingerInfoRequest","HEADER_HEIGHT","getLyricRequest","getSongDetailRequest","getHotKeyWordsRequest","getSuggestListRequest","query","getResultSongsListRequest","getLoginByPhoneRequest","post","getLoginByEmailRequest","getLoginByQRRequest","getResigterRequest"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { axiosInstance } from \"./config\";\nconst CancelToken = axios.CancelToken \nconst source = CancelToken.source()\n\n//获取轮播图\nexport const getBannerRequest = () => {\n  return axiosInstance.get ('/getDigitalAlbumLists');\n}\n\n\n// export const  getBannerRequest = () => {\n//   return axiosInstance.get('/banner', {\n//     cancelToken: source.token\n//   }).catch(function(thrown) {\n//       if(axios.isCancel(thrown)) {\n//           console.log('Request canceled', thrown.message)\n//       } else {\n//           // handle error\n//       }\n//   })\n// }\n\n\n//获取推荐歌单\nexport const getRecommendListRequest = () => {\n  return axiosInstance.get ('/getRecommend');\n}\n\n//实现取消发送\n// export const getRecommendListRequest = () => {\n//     return axiosInstance.get('/personalized', {\n//       cancelToken: source.token\n//     }).catch(function(thrown) {\n//         if(axios.isCancel(thrown)) {\n//             console.log('Request canceled', thrown.message)\n//         } else {\n//             // handle error\n//         }\n//     })\n// }\n\n// source.cancel('取消上次请求')\n//获取热门歌手\n//可选参数 : limit: 取出数量 , 默认为 50\n//offset: 偏移数量 , 用于分页 , 如 :( 页数 -1)*50, 其中 50 为 limit 的值 , 默认 \nexport const getHotSingerListRequest = (count) => {\n  return axiosInstance.get(`/top/artists?offset=${count}`);\n}\n//歌手分类列表\n//localhost:4000/artist/list?type=1&area=7&initial=b\n//type 取值: -1:全部 1:男歌手 2:女歌手 3:乐队\n//area 取值: -1:全部 7华语 96欧美 8:日本 0:其他\n//initial取值: 名字首字母\n//limit   默认30\n//offset : 偏移数量 如 : 如 :( 页数 -1)*30, 其中 30 为 limit 的值 \nexport const getSingerListRequest= (area, initial, offset) => {\n  return axiosInstance.get(`/artist/list?area=${area.toLowerCase()}&initial=${initial}&offset=${offset}`);\n}\n//获取排行榜\nexport const getRankListRequest = () => {\n  return axiosInstance.get(`/toplist/detail`);\n};\n\n\n//获取歌单详情\n// 必选参数 : id : 歌单 id\n//可选参数 : s : 歌单最近的 s 个收藏者,默认为8\nexport const getAlbumDetailRequest = id => {\n  return axiosInstance.get(`/getSongListDetail?disstid=${id}`);\n};\n\n//获取单个歌曲播放链接\nexport const getOneMusicPlayerRequest = (mid) => {\n  //例子getMusicPlay/songmid=0025NhlN2yWrP4s\n  return axiosInstance.get(`/getMusicPlay/songmid=${mid}`)\n}\n//获取多个歌曲播放链接\nexport const getMoreMusicPlayerRequest = (sonListStr) => {\n  //  return axiosInstance.get(`/getMusicPlay/songmid=${sonListStr}&resType=all`)\n  return axiosInstance.get('/getMusicPlay/songmid='+ sonListStr + '&resType=all')\n} \n\n\n//获取歌手详情\nexport const getSingerInfoRequest = id => {\n  return axiosInstance.get(`/artists?id=${id}`);\n};\n\n//顶部的高度\nexport const HEADER_HEIGHT = 45;\n\n//播放器开发\n\n\n\n//获取歌曲歌词\nexport const getLyricRequest = id => {\n  return axiosInstance.get (`/lyric?id=${id}`);\n};\n\n\nexport const getSongDetailRequest = id => {\n    return axiosInstance.get(`/song/detail?ids=${id}`);\n};\n\n\nexport const getHotKeyWordsRequest = () => {\n    return axiosInstance.get(`/search/hot`)\n}\n\n\nexport const getSuggestListRequest  = (query) => {\n    return axiosInstance.get(`/search/suggest?keywords = ${query}`)\n}\n\nexport const getResultSongsListRequest = (query) => {\n    return axiosInstance.get(`/search?keywords=${query}`)\n}\n//手机号码登录\nexport const getLoginByPhoneRequest = (query) => {\n  return axiosInstance.post(`/login/cellphone`)\n}\n//邮箱密码登录\nexport const getLoginByEmailRequest = (query) => {\n  return axiosInstance.post()\n}\n\n//二维码扫码登录\nexport const getLoginByQRRequest = () => {\n\n}\n\n//注册\nexport const getResigterRequest = () => {\n\n}\n"]},"metadata":{},"sourceType":"module"}