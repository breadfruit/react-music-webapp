{"ast":null,"code":"var _jsxFileName = \"/Users/macos/Desktop/react-music-webapp/src/application/Player/play-list/index.js\",\n    _s = $RefreshSig$();\n\nimport { connect } from \"react-redux\";\nimport { PlayListWrapper, ScrollWrapper, ListHeader, ListContent } from './style';\nimport { CSSTransition } from 'react-transition-group';\nimport React, { useRef, useState, useCallback } from 'react';\nimport { prefixStyle, getName, shuffle, findIndex } from './../../../api/utils';\nimport { changeShowPlayList, changeCurrentIndex, changePlayMode, changePlayList, deleteSong, changeSequecePlayList, changeCurrentSong, changePlayingState } from \"../store/actionCreators\";\nimport { playMode } from \"../../../api/config\";\nimport Scroll from '../../../baseUI/scroll'; // import Confirm from './../../../baseUI/confirm/index';\n//组件内代码\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PlayList(props) {\n  _s();\n\n  const [canTouch, setCanTouch] = useState(true); // touchStart后记录y值\n\n  const [startY, setStartY] = useState(0); // touchStart事件是否已经被触发\n\n  const [initialed, setInitialed] = useState(0); // 用户下滑的距离\n\n  const [distance, setDistance] = useState(0);\n  const {\n    currentIndex,\n    currentSong: immutableCurrentSong,\n    showPlayList,\n    playList: immutablePlayList,\n    mode,\n    sequencePlayList: immutableSequencePlayList\n  } = props;\n  const {\n    togglePlayListDispatch,\n    changeCurrentIndexDispatch,\n    changePlayListDispatch,\n    changeModeDispatch,\n    deleteSongDispatch,\n    clearDispatch\n  } = props;\n  const currentSong = immutableCurrentSong.toJS();\n  const playList = immutablePlayList.toJS();\n  const sequencePlayList = immutableSequencePlayList.toJS();\n  const listContentRef = useRef(); // const confirmRef = useRef();\n\n  const playListRef = useRef();\n  const listWrapperRef = useRef();\n  const [isShow, setIsShow] = useState(false);\n  const transform = prefixStyle(\"transform\");\n  const onEnterCB = useCallback(() => {\n    //让列表显示\n    setIsShow(true); //最开始是隐藏在下面\n\n    listWrapperRef.current.style[transform] = `translate3d(0, 100%, 0)`;\n  }, [transform]);\n  const onEnteringCB = useCallback(() => {\n    //让列表展现\n    listWrapperRef.current.style[\"transition\"] = \"all 0.3s\";\n    listWrapperRef.current.style[transform] = `translate3d(0, 0, 0)`;\n  }, [transform]);\n  const onExitingCB = useCallback(() => {\n    listWrapperRef.current.style[\"transition\"] = \"all 0.3s\";\n    listWrapperRef.current.style[transform] = `translate3d(0px, 100%, 0px)`;\n  }, [transform]);\n  const onExitedCB = useCallback(() => {\n    setIsShow(false);\n    listWrapperRef.current.style[transform] = `translate3d(0px, 100%, 0px)`;\n  }, [transform]);\n\n  const getCurrentIcon = item => {\n    //是不是当前正在播放的歌曲\n    const current = currentSong.id === item.id;\n    const className = current ? 'icon-play' : '';\n    const content = current ? '&#xe6e3;' : '';\n    return /*#__PURE__*/_jsxDEV(\"i\", {\n      className: `current iconfont ${className}`,\n      dangerouslySetInnerHTML: {\n        __html: content\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this);\n  };\n\n  const getPlayMode = () => {\n    let content, text;\n\n    if (mode === playMode.sequence) {\n      content = \"&#xe625;\";\n      text = \"顺序播放\";\n    } else if (mode === playMode.loop) {\n      content = \"&#xe653;\";\n      text = \"单曲循环\";\n    } else {\n      content = \"&#xe61b;\";\n      text = \"随机播放\";\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"iconfont\",\n        onClick: e => changeMode(e),\n        dangerouslySetInnerHTML: {\n          __html: content\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text\",\n        onClick: e => changeMode(e),\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this);\n  };\n\n  const changeMode = () => {\n    let newMode = (mode + 1) % 3;\n\n    if (newMode === 0) {\n      //顺序模式\n      changePlayListDispatch(sequencePlayList);\n      let index = findIndex(currentSong, sequencePlayList);\n      changeCurrentIndexDispatch(index);\n    } else if (newMode === 1) {\n      //单曲循环\n      changePlayListDispatch(sequencePlayList);\n    } else if (newMode === 2) {\n      //随机播放\n      let newList = shuffle(sequencePlayList);\n      let index = findIndex(currentSong, newList);\n      changePlayListDispatch(newList);\n      changeCurrentIndexDispatch(index);\n    }\n\n    changeModeDispatch(newMode);\n  }; //点击歌曲将当前的歌曲的状态进行切割\n\n\n  const handleChangeCurrentIndex = index => {\n    if (currentIndex === index) return;\n    changeCurrentIndexDispatch(index);\n  };\n\n  const handleDeleteSong = (e, song) => {\n    e.stopPropagation();\n    deleteSongDispatch(song);\n  }; // const handleShowClear = () => {\n  //   confirmRef.current.show();\n  // };\n\n\n  const handleConfirmClear = () => {\n    clearDispatch();\n  };\n\n  const handleScroll = pos => {\n    //只有当内容偏移量为0的时候才能下滑关闭PlayList。否则一边内容在移动，一边列表在移动，出现bug\n    let state = pos.y === 0;\n    setCanTouch(state);\n  };\n\n  const handleTouchStart = e => {\n    if (!canTouch || initialed) return;\n    listWrapperRef.current.style[\"transition\"] = \"\";\n    setStartY(e.nativeEvent.touches[0].pageY); //记录y值\n\n    setInitialed(true);\n  };\n\n  const handleTouchMove = e => {\n    if (!canTouch || !initialed) return;\n    let distance = e.nativeEvent.touches[0].pageY - startY;\n    if (distance < 0) return;\n    setDistance(distance); //记录下滑距离\n\n    listWrapperRef.current.style.transform = `translate3d(0, ${distance}px, 0)`;\n  };\n\n  const handleTouchEnd = e => {\n    setInitialed(false); //这里设置阈值为150px\n\n    if (distance >= 150) {\n      //大于150px则关闭PlayList\n      togglePlayListDispatch(false);\n    } else {\n      //否则反弹回去\n      listWrapperRef.current.style[\"transition\"] = \"all 0.3s\";\n      listWrapperRef.current.style[transform] = `translate3d(0px, 0px, 0px)`;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(CSSTransition, {\n    in: showPlayList,\n    timeout: 300,\n    classNames: \"list-fade\",\n    onEnter: onEnterCB,\n    onEntering: onEnteringCB,\n    onExiting: onExitingCB,\n    onExited: onExitedCB,\n    children: /*#__PURE__*/_jsxDEV(PlayListWrapper, {\n      ref: playListRef,\n      style: isShow === true ? {\n        display: \"block\"\n      } : {\n        display: \"none\"\n      },\n      onClick: () => togglePlayListDispatch(false),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list_wrapper\",\n        ref: listWrapperRef,\n        onClick: e => e.stopPropagation(),\n        onTouchStart: handleTouchStart,\n        onTouchMove: handleTouchMove,\n        onTouchEnd: handleTouchEnd,\n        children: [/*#__PURE__*/_jsxDEV(ListHeader, {\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"title\",\n            children: getPlayMode()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ScrollWrapper, {\n          children: /*#__PURE__*/_jsxDEV(Scroll, {\n            ref: listContentRef,\n            onScroll: pos => handleScroll(pos),\n            bounceTop: false,\n            children: /*#__PURE__*/_jsxDEV(ListContent, {\n              children: playList.map((item, index) => {\n                return /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"item\",\n                  onClick: () => handleChangeCurrentIndex(index),\n                  children: [getCurrentIcon(item), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text\",\n                    children: [item.name, \" - \", getName(item.ar)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 215,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"like\",\n                    children: /*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"iconfont\",\n                      children: \"\\uE601\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 217,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 216,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"delete\",\n                    onClick: e => handleDeleteSong(e, item),\n                    children: /*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"iconfont\",\n                      children: \"\\uE63D\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 220,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 219,\n                    columnNumber: 25\n                  }, this)]\n                }, item.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 213,\n                  columnNumber: 23\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 175,\n    columnNumber: 5\n  }, this);\n} // 映射Redux全局的state到组件的props上\n\n\n_s(PlayList, \"BQi+eDOW1S8jpSbldRsFXXJffZA=\");\n\n_c = PlayList;\n\nconst mapStateToProps = state => ({\n  currentIndex: state.getIn(['player', 'currentIndex']),\n  currentSong: state.getIn(['player', 'currentSong']),\n  playList: state.getIn(['player', 'playList']),\n  //播放列表\n  sequencePlayList: state.getIn(['player', 'sequencePlayList']),\n  //顺序排列时的播放列表\n  showPlayList: state.getIn(['player', 'showPlayList']),\n  mode: state.getIn(['player', 'mode'])\n}); // 映射dispatch到props上\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    togglePlayListDispatch(data) {\n      dispatch(changeShowPlayList(data));\n    },\n\n    //修改当前歌曲在列表中的index，也就是切歌\n    changeCurrentIndexDispatch(data) {\n      dispatch(changeCurrentIndex(data));\n    },\n\n    //修改当前的播放模式\n    changeModeDispatch(data) {\n      dispatch(changePlayMode(data));\n    },\n\n    //修改当前的歌曲列表\n    changePlayListDispatch(data) {\n      dispatch(changePlayList(data));\n    },\n\n    deleteSongDispatch(data) {\n      dispatch(deleteSong(data));\n    },\n\n    clearDispatch() {\n      // 1.清空两个列表\n      dispatch(changePlayList([]));\n      dispatch(changeSequecePlayList([])); // 2.初始currentIndex\n\n      dispatch(changeCurrentIndex(-1)); // 3.关闭PlayList的显示\n\n      dispatch(changeShowPlayList(false)); // 4.将当前歌曲置空\n\n      dispatch(changeCurrentSong({})); // 5.重置播放状态\n\n      dispatch(changePlayingState(false));\n    }\n\n  };\n}; // 将ui组件包装成容器组件\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)( /*#__PURE__*/React.memo(PlayList));\n\nvar _c;\n\n$RefreshReg$(_c, \"PlayList\");","map":{"version":3,"sources":["/Users/macos/Desktop/react-music-webapp/src/application/Player/play-list/index.js"],"names":["connect","PlayListWrapper","ScrollWrapper","ListHeader","ListContent","CSSTransition","React","useRef","useState","useCallback","prefixStyle","getName","shuffle","findIndex","changeShowPlayList","changeCurrentIndex","changePlayMode","changePlayList","deleteSong","changeSequecePlayList","changeCurrentSong","changePlayingState","playMode","Scroll","PlayList","props","canTouch","setCanTouch","startY","setStartY","initialed","setInitialed","distance","setDistance","currentIndex","currentSong","immutableCurrentSong","showPlayList","playList","immutablePlayList","mode","sequencePlayList","immutableSequencePlayList","togglePlayListDispatch","changeCurrentIndexDispatch","changePlayListDispatch","changeModeDispatch","deleteSongDispatch","clearDispatch","toJS","listContentRef","playListRef","listWrapperRef","isShow","setIsShow","transform","onEnterCB","current","style","onEnteringCB","onExitingCB","onExitedCB","getCurrentIcon","item","id","className","content","__html","getPlayMode","text","sequence","loop","e","changeMode","newMode","index","newList","handleChangeCurrentIndex","handleDeleteSong","song","stopPropagation","handleConfirmClear","handleScroll","pos","state","y","handleTouchStart","nativeEvent","touches","pageY","handleTouchMove","handleTouchEnd","display","map","name","ar","mapStateToProps","getIn","mapDispatchToProps","dispatch","data","memo"],"mappings":"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","sourcesContent":["import { connect } from \"react-redux\";\nimport { PlayListWrapper, ScrollWrapper, ListHeader, ListContent } from './style';\nimport { CSSTransition } from 'react-transition-group';\nimport React, { useRef, useState, useCallback } from 'react';\nimport { prefixStyle, getName, shuffle, findIndex } from './../../../api/utils';\nimport { changeShowPlayList, changeCurrentIndex, changePlayMode, changePlayList, deleteSong,changeSequecePlayList, changeCurrentSong, changePlayingState } from \"../store/actionCreators\";\nimport { playMode } from \"../../../api/config\";\nimport Scroll from '../../../baseUI/scroll';\n// import Confirm from './../../../baseUI/confirm/index';\n//组件内代码\nfunction PlayList(props) {\n  const [canTouch,setCanTouch] = useState(true);\n  // touchStart后记录y值\n  const [startY, setStartY] = useState(0);\n  // touchStart事件是否已经被触发\n  const [initialed, setInitialed] = useState(0);\n  // 用户下滑的距离\n  const [distance, setDistance] = useState(0);\n\n  const {\n    currentIndex,\n    currentSong:immutableCurrentSong,\n    showPlayList,\n    playList:immutablePlayList,\n    mode,\n    sequencePlayList:immutableSequencePlayList\n  } = props;\n  const {\n    togglePlayListDispatch,\n    changeCurrentIndexDispatch,\n    changePlayListDispatch,\n    changeModeDispatch,\n    deleteSongDispatch,\n    clearDispatch \n  } = props;\n  \n  const currentSong = immutableCurrentSong.toJS();\n  const playList = immutablePlayList.toJS();\n  const sequencePlayList = immutableSequencePlayList.toJS();\n\n  const listContentRef = useRef();\n  // const confirmRef = useRef();\n  const playListRef = useRef();\n  const listWrapperRef = useRef();\n  const [isShow, setIsShow] = useState(false);\n  const transform = prefixStyle(\"transform\");\n\n  const onEnterCB = useCallback(() => {\n    //让列表显示\n    setIsShow(true);\n    //最开始是隐藏在下面\n    listWrapperRef.current.style[transform] = `translate3d(0, 100%, 0)`;\n  }, [transform]);\n  \n  const onEnteringCB = useCallback(() => {\n    //让列表展现\n    listWrapperRef.current.style[\"transition\"] = \"all 0.3s\";\n    listWrapperRef.current.style[transform] = `translate3d(0, 0, 0)`;\n  }, [transform]);\n  \n  const onExitingCB = useCallback(() => {\n    listWrapperRef.current.style[\"transition\"] = \"all 0.3s\";\n    listWrapperRef.current.style[transform] = `translate3d(0px, 100%, 0px)`;\n  }, [transform]);\n  \n  const onExitedCB = useCallback(() => {\n    setIsShow(false);\n    listWrapperRef.current.style[transform] = `translate3d(0px, 100%, 0px)`;\n  }, [transform]);\n\n  const getCurrentIcon = (item) => {\n    //是不是当前正在播放的歌曲\n    const current = currentSong.id === item.id;\n    const className = current ? 'icon-play' : '';\n    const content = current ? '&#xe6e3;': '';\n    return (\n      <i className={`current iconfont ${className}`} dangerouslySetInnerHTML={{__html:content}}></i>\n    )\n  };\n  \n  const getPlayMode = () => {\n    let content, text;\n    if(mode === playMode.sequence) {\n      content = \"&#xe625;\";\n      text = \"顺序播放\";\n    } else if(mode === playMode.loop) {\n      content = \"&#xe653;\";\n      text = \"单曲循环\";\n    } else {\n      content = \"&#xe61b;\";\n      text = \"随机播放\";\n    }\n    return (\n      <div>\n        <i className=\"iconfont\" onClick={(e) => changeMode(e)}  dangerouslySetInnerHTML={{__html: content}}></i>\n        <span className=\"text\" onClick={(e) => changeMode(e)}>{text}</span>\n      </div>\n    )\n  };\n\n  const changeMode = () => {\n    let newMode = (mode + 1) % 3;\n    if (newMode === 0) {\n      //顺序模式\n      changePlayListDispatch(sequencePlayList);\n      let index = findIndex(currentSong, sequencePlayList);\n      changeCurrentIndexDispatch(index);\n    } else if (newMode === 1) {\n      //单曲循环\n      changePlayListDispatch(sequencePlayList);\n    } else if (newMode === 2) {\n      //随机播放\n      let newList = shuffle(sequencePlayList);\n      let index = findIndex(currentSong, newList);\n      changePlayListDispatch(newList);\n      changeCurrentIndexDispatch(index);\n    }\n    changeModeDispatch(newMode);\n  };\n\n  //点击歌曲将当前的歌曲的状态进行切割\n  const handleChangeCurrentIndex = (index) => {\n    if(currentIndex === index) return;\n    changeCurrentIndexDispatch(index);\n  };\n\n  const handleDeleteSong = (e, song) => {\n    e.stopPropagation();\n    deleteSongDispatch(song);\n  };\n\n  // const handleShowClear = () => {\n  //   confirmRef.current.show();\n  // };\n\n  const handleConfirmClear = () => {\n    clearDispatch();\n  };\n\n  const handleScroll = (pos) => {\n    //只有当内容偏移量为0的时候才能下滑关闭PlayList。否则一边内容在移动，一边列表在移动，出现bug\n    let state = pos.y === 0;\n    setCanTouch(state);\n  };\n\n  const handleTouchStart = (e) => {\n    if(!canTouch || initialed) return;\n    listWrapperRef.current.style[\"transition\"] = \"\";\n    setStartY(e.nativeEvent.touches[0].pageY);//记录y值\n    setInitialed(true);\n  };\n\n  const handleTouchMove = (e) => {\n    if(!canTouch || !initialed) return;\n    let distance = e.nativeEvent.touches[0].pageY - startY;\n    if(distance < 0) return;\n    setDistance(distance);//记录下滑距离\n    listWrapperRef.current.style.transform = `translate3d(0, ${distance}px, 0)`;\n  };\n\n  const handleTouchEnd = (e) => {\n    setInitialed(false);\n    //这里设置阈值为150px\n    if(distance >= 150) {\n      //大于150px则关闭PlayList\n      togglePlayListDispatch(false);\n    } else {\n      //否则反弹回去\n      listWrapperRef.current.style[\"transition\"] = \"all 0.3s\";\n      listWrapperRef.current.style[transform] = `translate3d(0px, 0px, 0px)`;\n    }\n  };\n\n  return (\n    <CSSTransition \n      in={showPlayList} \n      timeout={300} \n      classNames=\"list-fade\"\n      onEnter={onEnterCB}\n      onEntering={onEnteringCB}\n      onExiting={onExitingCB}\n      onExited={onExitedCB}\n    >\n      <PlayListWrapper \n        ref={playListRef} \n        style={isShow === true ? { display: \"block\" } : { display: \"none\" }} \n        onClick={() => togglePlayListDispatch(false)}\n      >\n        <div \n          className=\"list_wrapper\" \n          ref={listWrapperRef} \n          onClick={e => e.stopPropagation()}\n          onTouchStart={handleTouchStart}\n          onTouchMove={handleTouchMove}\n          onTouchEnd={handleTouchEnd}\n        >\n          <ListHeader>\n            <h1 className=\"title\">\n              { getPlayMode() }\n              {/* <span className=\"iconfont clear\" onClick={handleShowClear}>&#xe63d;</span> */}\n            </h1>\n          </ListHeader>\n          <ScrollWrapper>\n          <Scroll \n            ref={listContentRef} \n            onScroll={pos => handleScroll(pos)}\n            bounceTop={false}\n          >\n              <ListContent>\n                {\n                  playList.map((item, index) => {\n                    return (\n                      <li className=\"item\" key={item.id} onClick={() => handleChangeCurrentIndex(index)}>\n                        { getCurrentIcon(item) }\n                        <span className=\"text\">{item.name} - {getName(item.ar)}</span>\n                        <span className=\"like\">\n                          <i className=\"iconfont\">&#xe601;</i>\n                        </span>\n                        <span className=\"delete\" onClick={(e) => handleDeleteSong(e, item)}>\n                          <i className=\"iconfont\">&#xe63d;</i>\n                        </span>\n                      </li>\n                    )\n                  })\n                }\n              </ListContent>\n            </Scroll>\n          </ScrollWrapper>\n          {/* <Confirm \n            ref={confirmRef}\n            text={\"是否删除全部?\"} \n            cancelBtnText={\"取消\"} \n            confirmBtnText={\"确定\"} \n            handleConfirm={handleConfirmClear}\n          /> */}\n          </div>\n      </PlayListWrapper>\n    </CSSTransition>\n  )\n}\n// 映射Redux全局的state到组件的props上\nconst mapStateToProps = (state) => ({\n  currentIndex: state.getIn(['player', 'currentIndex']),\n  currentSong: state.getIn(['player', 'currentSong']),\n  playList: state.getIn(['player', 'playList']),//播放列表\n  sequencePlayList: state.getIn(['player', 'sequencePlayList']),//顺序排列时的播放列表\n  showPlayList: state.getIn(['player', 'showPlayList']),\n  mode: state.getIn(['player', 'mode'])\n});\n// 映射dispatch到props上\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    togglePlayListDispatch(data) {\n      dispatch(changeShowPlayList(data));\n    },\n    //修改当前歌曲在列表中的index，也就是切歌\n    changeCurrentIndexDispatch(data) {\n      dispatch(changeCurrentIndex(data));\n    },\n    //修改当前的播放模式\n    changeModeDispatch(data) {\n      dispatch(changePlayMode(data));\n    },\n    //修改当前的歌曲列表\n    changePlayListDispatch(data) {\n      dispatch(changePlayList(data));\n    },\n    deleteSongDispatch(data) {\n      dispatch(deleteSong(data));\n    },\n    clearDispatch() {\n      // 1.清空两个列表\n      dispatch(changePlayList([]));\n      dispatch(changeSequecePlayList([]));\n      // 2.初始currentIndex\n      dispatch(changeCurrentIndex(-1));\n      // 3.关闭PlayList的显示\n      dispatch(changeShowPlayList(false));\n      // 4.将当前歌曲置空\n      dispatch(changeCurrentSong({}));\n      // 5.重置播放状态\n      dispatch(changePlayingState(false));\n    }\n  }\n};\n// 将ui组件包装成容器组件\nexport default connect(mapStateToProps, mapDispatchToProps)(React.memo(PlayList));"]},"metadata":{},"sourceType":"module"}