{"ast":null,"code":"var _jsxFileName = \"/Users/macos/Desktop/react-music-webapp/src/application/Recommend/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport Slider from '../../components/slider';\nimport RecommendList from '../../components/list';\nimport { connect } from 'react-redux';\nimport * as actionTypes from './store/actionCreators';\nimport Scroll from '../../baseUI/scroll/index';\nimport { Content } from './style';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Recommend(props) {\n  _s();\n\n  const {\n    bannerList,\n    recommendList\n  } = props;\n  const {\n    getBannerDataDispatch,\n    getRecommendListDataDispatch\n  } = props; //进行更新视图，初始化\n\n  useEffect(() => {\n    getBannerDataDispatch();\n    getRecommendListDataDispatch();\n  }, []);\n  const bannerListJS = bannerList ? bannerList.toJS() : [];\n  const recommendListJS = recommendList ? recommendList.toJS() : [];\n  return /*#__PURE__*/_jsxDEV(Content, {\n    children: /*#__PURE__*/_jsxDEV(Scroll, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Slider, {\n          bannerList: bannerListJS\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RecommendList, {\n          recommendList: recommendListJS\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n} //输出samrt组件，类似处理业务层\n//告诉父组件需要的state和更新的dispatch\n\n\n_s(Recommend, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Recommend;\n\nconst mapStateToProps = state => ({\n  // 不要在这里将数据 toJS\n  // 不然每次 diff 比对 props 的时候都是不一样的引用，还是导致不必要的重渲染，属于滥用 immutable\n  bannerList: state.getIn(['recommend', 'bannerList']),\n  recommendList: state.getIn(['recommend', 'recommendList'])\n});\n\nconst mapDispatchProps = dispatch => {\n  return {\n    getBannerDataDispatch() {\n      //将结果更新视图\n      dispatch(actionTypes.getBannerList());\n    },\n\n    getRecommendListDataDispatch() {\n      dispatch(actionTypes.getRecommendList());\n    }\n\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchProps)( /*#__PURE__*/React.memo(Recommend));\n\nvar _c;\n\n$RefreshReg$(_c, \"Recommend\");","map":{"version":3,"sources":["/Users/macos/Desktop/react-music-webapp/src/application/Recommend/index.js"],"names":["React","useEffect","Slider","RecommendList","connect","actionTypes","Scroll","Content","Recommend","props","bannerList","recommendList","getBannerDataDispatch","getRecommendListDataDispatch","bannerListJS","toJS","recommendListJS","mapStateToProps","state","getIn","mapDispatchProps","dispatch","getBannerList","getRecommendList","memo"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,aAAP,MAA0B,uBAA1B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAO,KAAKC,WAAZ,MAA6B,wBAA7B;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,SAAQC,OAAR,QAAsB,SAAtB;;;AAIA,SAASC,SAAT,CAAoBC,KAApB,EAA2B;AAAA;;AAEzB,QAAM;AAACC,IAAAA,UAAD;AAAaC,IAAAA;AAAb,MAA8BF,KAApC;AACA,QAAM;AAAEG,IAAAA,qBAAF;AAAyBC,IAAAA;AAAzB,MAA0DJ,KAAhE,CAHyB,CAK3B;;AACER,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,qBAAqB;AACrBC,IAAAA,4BAA4B;AAC7B,GAHQ,EAGN,EAHM,CAAT;AAKA,QAAMC,YAAY,GAAGJ,UAAU,GAAGA,UAAU,CAACK,IAAX,EAAH,GAAwB,EAAvD;AACA,QAAMC,eAAe,GAAGL,aAAa,GAAGA,aAAa,CAACI,IAAd,EAAH,GAA0B,EAA/D;AAEA,sBACE,QAAC,OAAD;AAAA,2BACE,QAAC,MAAD;AAAA,6BACE;AAAA,gCACE,QAAC,MAAD;AAAQ,UAAA,UAAU,EAAED;AAApB;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,aAAD;AAAe,UAAA,aAAa,EAAEE;AAA9B;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,C,CACD;AACA;;;GA1BSR,S;;KAAAA,S;;AA2BT,MAAMS,eAAe,GAAIC,KAAD,KAAY;AAClC;AACA;AACAR,EAAAA,UAAU,EAAEQ,KAAK,CAACC,KAAN,CAAa,CAAC,WAAD,EAAc,YAAd,CAAb,CAHsB;AAIlCR,EAAAA,aAAa,EAAEO,KAAK,CAACC,KAAN,CAAa,CAAC,WAAD,EAAc,eAAd,CAAb;AAJmB,CAAZ,CAAxB;;AAOA,MAAMC,gBAAgB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACLT,IAAAA,qBAAqB,GAAG;AACtB;AACAS,MAAAA,QAAQ,CAAChB,WAAW,CAACiB,aAAZ,EAAD,CAAR;AACD,KAJI;;AAKLT,IAAAA,4BAA4B,GAAG;AAC7BQ,MAAAA,QAAQ,CAAChB,WAAW,CAACkB,gBAAZ,EAAD,CAAR;AACD;;AAPI,GAAP;AASD,CAVD;;AAYA,eAAenB,OAAO,CAACa,eAAD,EAAkBG,gBAAlB,CAAP,eAA2CpB,KAAK,CAACwB,IAAN,CAAWhB,SAAX,CAA3C,CAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport Slider from '../../components/slider';\nimport RecommendList from '../../components/list';\nimport {connect} from 'react-redux'\nimport * as actionTypes from './store/actionCreators'\nimport Scroll from '../../baseUI/scroll/index'\nimport {Content} from './style'\n\n\n\nfunction Recommend (props) {\n\n  const {bannerList, recommendList} = props\n  const { getBannerDataDispatch, getRecommendListDataDispatch } = props;\n\n//进行更新视图，初始化\n  useEffect(() => {\n    getBannerDataDispatch();\n    getRecommendListDataDispatch();\n  }, [])\n\n  const bannerListJS = bannerList ? bannerList.toJS () : [];\n  const recommendListJS = recommendList ? recommendList.toJS() : []\n\n  return (\n    <Content>\n      <Scroll>\n        <div>\n          <Slider bannerList={bannerListJS}></Slider>\n          <RecommendList recommendList={recommendListJS}></RecommendList>\n        </div>\n      </Scroll>\n    </Content> \n  )\n}\n//输出samrt组件，类似处理业务层\n//告诉父组件需要的state和更新的dispatch\nconst mapStateToProps = (state) => ({\n  // 不要在这里将数据 toJS\n  // 不然每次 diff 比对 props 的时候都是不一样的引用，还是导致不必要的重渲染，属于滥用 immutable\n  bannerList: state.getIn (['recommend', 'bannerList']),\n  recommendList: state.getIn (['recommend', 'recommendList']),\n});\n\nconst mapDispatchProps = (dispatch) => {\n  return {\n    getBannerDataDispatch() {\n      //将结果更新视图\n      dispatch(actionTypes.getBannerList())\n    },\n    getRecommendListDataDispatch() {\n      dispatch(actionTypes.getRecommendList())\n    }\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchProps)(React.memo(Recommend))"]},"metadata":{},"sourceType":"module"}