{"ast":null,"code":"import axios from \"axios\";\nexport const baseUrl = \"http://localhost:3200\";\nexport const myUrl = \"http://localhost:4000\"; // axios的实例及拦截器配置\n\nconst axiosInstance = axios.create({\n  baseURL: baseUrl,\n  withCredentials: true\n});\nconst axiosOtherInstance = axios.create({\n  baseURL: myUrl,\n  withCredentials: true\n});\naxiosInstance.interceptors.response.use(res => res.data, err => {\n  console.log(err, \"网络错误\");\n});\naxiosOtherInstance.interceptors.response.use(res => res.data, err => {\n  console.log(err, \"网络错误\");\n});\nexport { axiosInstance, axiosOtherInstance }; //歌手种类\n\nexport const categoryTypes = [{\n  name: '全部',\n  key: {\n    area: -100,\n    sex: -100\n  }\n}, {\n  name: \"华语男\",\n  key: {\n    area: 200,\n    sex: 0\n  }\n}, {\n  name: \"华语女\",\n  key: {\n    area: 200,\n    sex: 1\n  }\n}, {\n  name: \"华语组合\",\n  key: {\n    area: 200,\n    sex: 2\n  }\n}, {\n  name: \"港台男\",\n  key: {\n    area: 2,\n    sex: 0\n  }\n}, {\n  name: \"港台女\",\n  key: {\n    area: 2,\n    sex: 1\n  }\n}, {\n  name: \"港台组合\",\n  key: {\n    area: 2,\n    sex: 2\n  }\n}, {\n  name: \"欧美男\",\n  key: {\n    area: 5,\n    sex: 0\n  }\n}, {\n  name: \"欧美女\",\n  key: {\n    area: 5,\n    sex: 1\n  }\n}, {\n  name: \"欧美组合\",\n  key: {\n    area: 5,\n    sex: 2\n  }\n}, {\n  name: \"日本男\",\n  key: {\n    area: 4,\n    sex: 0\n  }\n}, {\n  name: \"日本女\",\n  key: {\n    area: 4,\n    sex: 1\n  }\n}, {\n  name: \"日本组合\",\n  key: {\n    area: 4,\n    sex: 2\n  }\n}, {\n  name: \"韩国男\",\n  key: {\n    area: 3,\n    sex: 0\n  }\n}, {\n  name: \"韩国女\",\n  key: {\n    area: 3,\n    sex: 1\n  }\n}, {\n  name: \"韩国组合\",\n  key: {\n    area: 3,\n    sex: 2\n  }\n}, {\n  name: \"其他男歌手\",\n  key: {\n    area: 6,\n    sex: 0\n  }\n}, {\n  name: \"其他女歌手\",\n  key: {\n    area: 6,\n    sex: 1\n  }\n}, {\n  name: \"其他组合\",\n  key: {\n    area: 1,\n    sex: 2\n  }\n}];\nexport const sexTypes = [{\n  name: '全部',\n  key: -100\n}, {\n  name: '男',\n  key: 0\n}, {\n  name: '女',\n  key: 1\n}, {\n  name: '组合',\n  key: 2\n}]; //歌手首字母\n\nexport const alphaTypes = [{\n  key: \"A\",\n  name: 1\n}, {\n  key: \"B\",\n  name: 2\n}, {\n  key: \"C\",\n  name: 3\n}, {\n  key: \"D\",\n  name: 4\n}, {\n  key: \"E\",\n  name: 5\n}, {\n  key: \"F\",\n  name: 6\n}, {\n  key: \"G\",\n  name: 7\n}, {\n  key: \"H\",\n  name: 8\n}, {\n  key: \"I\",\n  name: 9\n}, {\n  key: \"J\",\n  name: 10\n}, {\n  key: \"K\",\n  name: 11\n}, {\n  key: \"L\",\n  name: 12\n}, {\n  key: \"M\",\n  name: 13\n}, {\n  key: \"N\",\n  name: 14\n}, {\n  key: \"O\",\n  name: 15\n}, {\n  key: \"P\",\n  name: 16\n}, {\n  key: \"Q\",\n  name: 17\n}, {\n  key: \"R\",\n  name: 18\n}, {\n  key: \"S\",\n  name: 19\n}, {\n  key: \"T\",\n  name: 20\n}, {\n  key: \"U\",\n  name: 21\n}, {\n  key: \"V\",\n  name: 22\n}, {\n  key: \"W\",\n  name: 23\n}, {\n  key: \"X\",\n  name: 24\n}, {\n  key: \"Y\",\n  name: 25\n}, {\n  key: \"Z\",\n  name: 26\n}]; //排行榜编号\n\nexport const RankTypes = {\n  \"0\": \"云音乐新歌榜\",\n  \"1\": \"云音乐热歌榜\",\n  \"2\": \"网易原创歌曲榜\",\n  \"3\": \"云音乐飙升榜\",\n  \"4\": \"云音乐国电榜\",\n  \"5\": \"UK排行榜周榜\",\n  \"6\": \"美国Billboard周榜\",\n  \"7\": \"KTV唛榜\",\n  \"8\": \"iTunes榜\",\n  \"9\": \"Hit FM Top榜\",\n  \"10\": \"日本Oricon周榜\",\n  \"11\": \"韩国Melon排行榜周榜\",\n  \"12\": \"韩国Mnet排行榜周榜\",\n  \"13\": \"韩国Melon原声周榜\",\n  \"14\": \"中国TOP排行榜（港台榜）\",\n  \"15\": \"中国TOP排行榜（内地榜）\",\n  \"16\": \"香港电台中文歌曲龙虎榜\",\n  \"17\": \"华语金曲榜\",\n  \"18\": \"中国嘻哈榜\",\n  \"19\": \"法国 NRJ Vos Hits 周榜\",\n  \"20\": \"台湾Hito排行榜\",\n  \"21\": \"Beatport全球电子舞曲榜\",\n  \"22\": \"云音乐ACG音乐榜\",\n  \"23\": \"江小白YOLO云音乐说唱榜\"\n}; //歌单一页限定歌曲数量\n\nexport const ONE_PAGE_COUNT = 50; //顶部的高度\n\nexport const HEADER_HEIGHT = 45; //播放模式\n\nexport const playMode = {\n  sequence: 0,\n  loop: 1,\n  random: 2\n}; // 倍速播放配置\n\nexport const list = [{\n  key: 0.75,\n  name: \"x0.75\"\n}, {\n  key: 1,\n  name: \"x1\"\n}, {\n  key: 1.25,\n  name: \"x1.25\"\n}, {\n  key: 1.5,\n  name: \"x1.5\"\n}, {\n  key: 2,\n  name: \"x2\"\n}];","map":{"version":3,"sources":["/Users/macos/Desktop/react-music-webapp/src/api/config.js"],"names":["axios","baseUrl","myUrl","axiosInstance","create","baseURL","withCredentials","axiosOtherInstance","interceptors","response","use","res","data","err","console","log","categoryTypes","name","key","area","sex","sexTypes","alphaTypes","RankTypes","ONE_PAGE_COUNT","HEADER_HEIGHT","playMode","sequence","loop","random","list"],"mappings":"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","sourcesContent":["import axios from \"axios\";\n\nexport const baseUrl = \"http://localhost:3200\";\nexport const myUrl = \"http://localhost:4000\"\n// axios的实例及拦截器配置\nconst axiosInstance = axios.create({\n  baseURL: baseUrl,\n  withCredentials: true\n});\nconst axiosOtherInstance = axios.create({\n  baseURL: myUrl,\n  withCredentials: true,\n});\n\naxiosInstance.interceptors.response.use(\n  res => res.data,\n  err => {\n    console.log(err, \"网络错误\");\n  }\n);\naxiosOtherInstance.interceptors.response.use(\n  res => res.data,\n  err => {\n    console.log(err, \"网络错误\");\n  }\n);\n\nexport { axiosInstance, axiosOtherInstance };\n\n//歌手种类\nexport const categoryTypes = [\n  {\n    name: '全部',\n    key: {\n      area: -100,\n      sex: -100\n    }\n  },\n  {\n    name: \"华语男\",\n    key: {\n      area: 200,\n      sex: 0\n    }\n  },\n  {\n    name: \"华语女\",\n    key: {\n      area: 200,\n      sex: 1\n    }\n  },\n  {\n    name: \"华语组合\",\n    key: {\n      area: 200,\n      sex: 2\n    }\n  },\n  {\n    name: \"港台男\",\n    key: {\n      area: 2,\n      sex: 0\n    }\n  },\n  {\n    name: \"港台女\",\n    key: {\n      area: 2,\n      sex: 1\n    }\n  },\n  {\n    name: \"港台组合\",\n    key: {\n      area: 2,\n      sex: 2\n    }\n  },\n  {\n    name: \"欧美男\",\n    key: {\n      area: 5,\n      sex: 0\n    }\n  },\n  {\n    name: \"欧美女\",\n    key: {\n      area: 5,\n      sex: 1\n    }\n  },\n  {\n    name: \"欧美组合\",\n    key: {\n      area: 5,\n      sex: 2\n    }\n  },\n  {\n    name: \"日本男\",\n    key: {\n      area: 4,\n      sex: 0\n    }\n  },\n  {\n    name: \"日本女\",\n    key: {\n      area: 4,\n      sex: 1\n    }\n  },\n  {\n    name: \"日本组合\",\n    key: {\n      area: 4,\n      sex: 2\n    }\n  },\n  {\n    name: \"韩国男\",\n    key: {\n      area: 3,\n      sex: 0\n    }\n  },\n  {\n    name: \"韩国女\",\n    key: {\n      area: 3,\n      sex: 1\n    }\n  },\n  {\n    name: \"韩国组合\",\n    key: {\n      area: 3,\n      sex: 2\n    }\n  },\n  {\n    name: \"其他男歌手\",\n    key: {\n      area: 6,\n      sex: 0\n    }\n  },\n  {\n    name: \"其他女歌手\",\n    key: {\n      area: 6,\n      sex: 1\n    }\n  },\n  {\n    name: \"其他组合\",\n    key: {\n      area: 1,\n      sex: 2\n    }\n  }\n];\n\n\nexport const sexTypes = [\n  {\n    name: '全部',\n    key: -100\n  },\n  {\n    name: '男',\n    key: 0\n  },\n  {\n    name: '女',\n    key: 1\n  },\n  {\n    name: '组合',\n    key: 2\n  }\n]\n//歌手首字母\nexport const alphaTypes = [\n  {\n    key: \"A\",\n    name: 1\n  },\n  {\n    key: \"B\",\n    name: 2\n  },\n  {\n    key: \"C\",\n    name: 3\n  },\n  {\n    key: \"D\",\n    name: 4\n  },\n  {\n    key: \"E\",\n    name: 5\n  },\n  {\n    key: \"F\",\n    name: 6\n  },\n  {\n    key: \"G\",\n    name: 7\n  },\n  {\n    key: \"H\",\n    name: 8\n  },\n  {\n    key: \"I\",\n    name: 9\n  },\n  {\n    key: \"J\",\n    name: 10\n  },\n  {\n    key: \"K\",\n    name: 11\n  },\n  {\n    key: \"L\",\n    name: 12\n  },\n  {\n    key: \"M\",\n    name: 13\n  },\n  {\n    key: \"N\",\n    name: 14\n  },\n  {\n    key: \"O\",\n    name: 15\n  },\n  {\n    key: \"P\",\n    name: 16\n  },\n  {\n    key: \"Q\",\n    name: 17\n  },\n  {\n    key: \"R\",\n    name: 18\n  },\n  {\n    key: \"S\",\n    name: 19\n  },\n  {\n    key: \"T\",\n    name: 20\n  },\n  {\n    key: \"U\",\n    name: 21\n  },\n  {\n    key: \"V\",\n    name: 22\n  },\n  {\n    key: \"W\",\n    name: 23\n  },\n  {\n    key: \"X\",\n    name: 24\n  },\n  {\n    key: \"Y\",\n    name: 25\n  },\n  {\n    key: \"Z\",\n    name: 26\n  }\n];\n\n//排行榜编号\nexport const RankTypes = {\n  \"0\": \"云音乐新歌榜\",\n  \"1\": \"云音乐热歌榜\",\n  \"2\": \"网易原创歌曲榜\",\n  \"3\": \"云音乐飙升榜\",\n  \"4\": \"云音乐国电榜\",\n  \"5\": \"UK排行榜周榜\",\n  \"6\": \"美国Billboard周榜\",\n  \"7\": \"KTV唛榜\",\n  \"8\": \"iTunes榜\",\n  \"9\": \"Hit FM Top榜\",\n  \"10\": \"日本Oricon周榜\",\n  \"11\": \"韩国Melon排行榜周榜\",\n  \"12\": \"韩国Mnet排行榜周榜\",\n  \"13\": \"韩国Melon原声周榜\",\n  \"14\": \"中国TOP排行榜（港台榜）\",\n  \"15\": \"中国TOP排行榜（内地榜）\",\n  \"16\": \"香港电台中文歌曲龙虎榜\",\n  \"17\": \"华语金曲榜\",\n  \"18\": \"中国嘻哈榜\",\n  \"19\": \"法国 NRJ Vos Hits 周榜\",\n  \"20\": \"台湾Hito排行榜\",\n  \"21\": \"Beatport全球电子舞曲榜\",\n  \"22\": \"云音乐ACG音乐榜\",\n  \"23\": \"江小白YOLO云音乐说唱榜\"\n};\n\n//歌单一页限定歌曲数量\nexport const ONE_PAGE_COUNT = 50;\n\n//顶部的高度\nexport const HEADER_HEIGHT = 45;\n\n//播放模式\nexport const playMode = {\n  sequence: 0,\n  loop: 1,\n  random: 2\n};\n\n// 倍速播放配置\nexport const list = [\n  {\n    key: 0.75,\n    name: \"x0.75\"\n  },\n  {\n    key: 1,\n    name:\"x1\"\n  }, \n  {\n    key: 1.25,\n    name:\"x1.25\"\n  }, \n  {\n    key: 1.5,\n    name:\"x1.5\"\n  }, \n  {\n    key: 2,\n    name:\"x2\"\n  }\n]"]},"metadata":{},"sourceType":"module"}