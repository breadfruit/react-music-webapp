{"ast":null,"code":"var _jsxFileName = \"/Users/macos/Desktop/react-music-webapp/src/baseUI/scroll/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { forwardRef, useState, useEffect, useRef, useImperativeHandle, useMemo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport BScroll from \"better-scroll\";\nimport styled from 'styled-components';\nimport { debounce } from \"../../api/utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ScrollContainer = styled.div`\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n`;\n_c = ScrollContainer;\nconst PullUpLoading = styled.div`\n  position: absolute;\n  left:0; right:0;\n  bottom: 5px;\n  width: 60px;\n  height: 60px;\n  margin: auto;\n  z-index: 100;\n`;\nexport const PullDownLoading = styled.div`\n  position: absolute;\n  left:0; right:0;\n  top: 0px;\n  height: 30px;\n  margin: auto;\n  z-index: 100;\n`; //而函数式组件天生不具备被上层组件直接调用 ref 的条件，\n//因此需要用 React 当中一些特殊的方式来处理，即使用 forwardRef 进行包裹。\n\nconst Scroll = /*#__PURE__*/forwardRef(_c2 = _s((props, ref) => {\n  _s();\n\n  const {\n    direction,\n    click,\n    refresh,\n    pullUpLoading,\n    pullDownLoading,\n    bounceTop,\n    bounceBottom\n  } = props;\n  const {\n    pullUp,\n    pullDown,\n    onScroll\n  } = props; //better-scroll 实例对象\n\n  const [bScroll, setBScroll] = useState(); //current 指向初始化 bs 实例需要的 DOM 元素 \n\n  const scrollContaninerRef = useRef(); //接下来创建 better-scroll，\n\n  useEffect(() => {\n    const scroll = new BScroll(scrollContaninerRef.current, {\n      scrollX: direction === \"horizental\",\n      scrollY: direction === \"vertical\",\n      probeType: 3,\n      click: click,\n      bounce: {\n        top: bounceTop,\n        bottom: bounceBottom\n      }\n    });\n    setBScroll(scroll);\n    return () => {\n      setBScroll(null);\n    };\n  }, [onScroll, bScroll]);\n  useEffect(() => {\n    if (!bScroll || onScroll) return;\n    bScroll.on('scroll', scroll => {\n      onScroll(scroll);\n    });\n    return () => {\n      bScroll.off('scroll');\n    };\n  }, [onScroll, bScroll]); //进行上拉到底的判断，调用上拉刷新的函数\n\n  useEffect(() => {\n    if (!bScroll || !pullUp) return;\n    bScroll.on('scrollEnd', () => {\n      if (bScroll.y > bScroll.maxScrollY + 100) {\n        //调用上拉刷新的函数\n        pullUp();\n      }\n    });\n    return () => {\n      bScroll.off('scrollEnd');\n    };\n  }, [pullUp, bScroll]); //进行下拉的判断，调用下拉刷新的函数\n\n  useEffect(() => {\n    if (!bScroll || !pullDown) return;\n    bScroll.on('touchEnd', pos => {\n      if (pos.y > 50) {\n        pullDown();\n      }\n    });\n    return () => {\n      bScroll.off('touchEnd');\n    };\n  }, [pullDown, bScroll]); //useImperativeHandle 可以让你在使用 ref 时自定义暴露给父组件的实例值\n  //让外部组件通过ref对组件进行操作\n\n  useImperativeHandle(ref, () => ({\n    refresh() {\n      if (bScroll) {\n        bScroll.refresh();\n        bScroll.scrollTo(0, 0);\n      }\n    },\n\n    getBScroll() {\n      if (bScroll) {\n        return bScroll;\n      }\n    }\n\n  }));\n  return /*#__PURE__*/_jsxDEV(ScrollContainer, {\n    ref: scrollContaninerRef,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 9\n  }, this);\n}, \"WgRj6g0Lx9b78BfP3pd09lQk6i0=\", false, function () {\n  return [useImperativeHandle];\n})); //基本配置\n\n_c3 = Scroll;\nScroll.propTypes = {\n  direction: PropTypes.oneOf(['vertical', 'horizental']),\n  refresh: PropTypes.bool,\n  onScroll: PropTypes.func,\n  click: PropTypes.bool,\n  onScroll: PropTypes.func,\n  pullUpLoading: PropTypes.bool,\n  pullDownLoading: PropTypes.bool,\n  bounceTop: PropTypes.bool,\n  bounceBottom: PropTypes.bool,\n  pullUp: PropTypes.func,\n  // 上拉加载逻辑\n  pullDown: PropTypes.func // 下拉加载逻辑\n\n}; //设置默认值\n\nScroll.defaultProps = {\n  // 滚动的方向\n  direction: 'vertical',\n  // 是否支持点击\n  click: true,\n  //是否刷新\n  refresh: true,\n  //滑动触发的回调函数\n  onScroll: null,\n  //是否显示上拉 loading 动画\n  pullUpLoading: false,\n  //是否显示下拉 loading 动画\n  pullDownLoading: false,\n  // 是否支持向上吸顶\n  bounceTop: true,\n  // 是否支持向下吸底\n  bounceBottom: true,\n  pullUp: null,\n  pullDown: null\n};\nexport default Scroll;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"ScrollContainer\");\n$RefreshReg$(_c2, \"Scroll$forwardRef\");\n$RefreshReg$(_c3, \"Scroll\");","map":{"version":3,"sources":["/Users/macos/Desktop/react-music-webapp/src/baseUI/scroll/index.js"],"names":["React","forwardRef","useState","useEffect","useRef","useImperativeHandle","useMemo","PropTypes","BScroll","styled","debounce","ScrollContainer","div","PullUpLoading","PullDownLoading","Scroll","props","ref","direction","click","refresh","pullUpLoading","pullDownLoading","bounceTop","bounceBottom","pullUp","pullDown","onScroll","bScroll","setBScroll","scrollContaninerRef","scroll","current","scrollX","scrollY","probeType","bounce","top","bottom","on","off","y","maxScrollY","pos","scrollTo","getBScroll","children","propTypes","oneOf","bool","func","defaultProps"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,EAAqCC,SAArC,EAAgDC,MAAhD,EAAwDC,mBAAxD,EAA6EC,OAA7E,QAA4F,OAA5F;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,QAAT,QAAyB,iBAAzB;;AAEA,MAAMC,eAAe,GAAGF,MAAM,CAACG,GAAI;AACnC;AACA;AACA;AACA,CAJA;KAAMD,e;AAMN,MAAME,aAAa,GAAGJ,MAAM,CAACG,GAAI;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;AAUA,OAAO,MAAME,eAAe,GAAGL,MAAM,CAACG,GAAI;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,CAPO,C,CAWP;AACA;;AACA,MAAMG,MAAM,gBAAGd,UAAU,UAAC,CAACe,KAAD,EAAQC,GAAR,KAAgB;AAAA;;AAEtC,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,KAAb;AAAoBC,IAAAA,OAApB;AAA6BC,IAAAA,aAA7B;AAA4CC,IAAAA,eAA5C;AAA6DC,IAAAA,SAA7D;AAAwEC,IAAAA;AAAxE,MAAyFR,KAA/F;AAEA,QAAM;AAAES,IAAAA,MAAF;AAAUC,IAAAA,QAAV;AAAoBC,IAAAA;AAApB,MAAiCX,KAAvC,CAJsC,CAMtC;;AACA,QAAM,CAACY,OAAD,EAAUC,UAAV,IAAwB3B,QAAQ,EAAtC,CAPsC,CAQtC;;AACA,QAAM4B,mBAAmB,GAAG1B,MAAM,EAAlC,CATsC,CAWtC;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAM4B,MAAM,GAAG,IAAIvB,OAAJ,CAAYsB,mBAAmB,CAACE,OAAhC,EAAyC;AACpDC,MAAAA,OAAO,EAAEf,SAAS,KAAK,YAD6B;AAEpDgB,MAAAA,OAAO,EAAEhB,SAAS,KAAK,UAF6B;AAGpDiB,MAAAA,SAAS,EAAC,CAH0C;AAIpDhB,MAAAA,KAAK,EAAEA,KAJ6C;AAKpDiB,MAAAA,MAAM,EAAC;AACLC,QAAAA,GAAG,EAAEd,SADA;AAELe,QAAAA,MAAM,EAAEd;AAFH;AAL6C,KAAzC,CAAf;AAUAK,IAAAA,UAAU,CAACE,MAAD,CAAV;AACA,WAAO,MAAM;AACTF,MAAAA,UAAU,CAAC,IAAD,CAAV;AACH,KAFD;AAIH,GAhBQ,EAgBN,CAACF,QAAD,EAAWC,OAAX,CAhBM,CAAT;AAkBAzB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAG,CAACyB,OAAD,IAAYD,QAAf,EAAyB;AACzBC,IAAAA,OAAO,CAACW,EAAR,CAAY,QAAZ,EAAuBR,MAAD,IAAY;AAC9BJ,MAAAA,QAAQ,CAAEI,MAAF,CAAR;AACH,KAFD;AAGA,WAAO,MAAM;AACTH,MAAAA,OAAO,CAACY,GAAR,CAAY,QAAZ;AACH,KAFD;AAGH,GARQ,EAQN,CAACb,QAAD,EAAWC,OAAX,CARM,CAAT,CA9BsC,CAuCtC;;AACAzB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAG,CAACyB,OAAD,IAAY,CAACH,MAAhB,EAAwB;AACxBG,IAAAA,OAAO,CAACW,EAAR,CAAW,WAAX,EAAwB,MAAM;AAC1B,UAAGX,OAAO,CAACa,CAAR,GAAYb,OAAO,CAACc,UAAR,GAAqB,GAApC,EAAwC;AACpC;AACAjB,QAAAA,MAAM;AACT;AACJ,KALD;AAMA,WAAO,MAAM;AACTG,MAAAA,OAAO,CAACY,GAAR,CAAY,WAAZ;AACH,KAFD;AAGH,GAXQ,EAWP,CAACf,MAAD,EAASG,OAAT,CAXO,CAAT,CAxCsC,CAqDtC;;AACAzB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAG,CAACyB,OAAD,IAAY,CAACF,QAAhB,EAA0B;AAC1BE,IAAAA,OAAO,CAACW,EAAR,CAAW,UAAX,EAAwBI,GAAD,IAAS;AAC5B,UAAGA,GAAG,CAACF,CAAJ,GAAO,EAAV,EAAa;AACTf,QAAAA,QAAQ;AACX;AACJ,KAJD;AAKA,WAAO,MAAM;AACTE,MAAAA,OAAO,CAACY,GAAR,CAAY,UAAZ;AACH,KAFD;AAIH,GAXQ,EAWP,CAACd,QAAD,EAAWE,OAAX,CAXO,CAAT,CAtDsC,CAmEtC;AACA;;AACAvB,EAAAA,mBAAmB,CAACY,GAAD,EAAM,OAAO;AAC5BG,IAAAA,OAAO,GAAG;AACN,UAAGQ,OAAH,EAAY;AACRA,QAAAA,OAAO,CAACR,OAAR;AACAQ,QAAAA,OAAO,CAACgB,QAAR,CAAiB,CAAjB,EAAmB,CAAnB;AACH;AACJ,KAN2B;;AAO5BC,IAAAA,UAAU,GAAG;AACT,UAAGjB,OAAH,EAAW;AACP,eAAOA,OAAP;AACH;AACJ;;AAX2B,GAAP,CAAN,CAAnB;AAaA,sBACI,QAAC,eAAD;AAAiB,IAAA,GAAG,EAAEE,mBAAtB;AAAA,cACGd,KAAK,CAAC8B;AADT;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAvFwB;AAAA,UAqErBzC,mBArEqB;AAAA,GAAzB,C,CA6FA;;MA7FMU,M;AA8FNA,MAAM,CAACgC,SAAP,GAAmB;AACf7B,EAAAA,SAAS,EAAEX,SAAS,CAACyC,KAAV,CAAgB,CAAC,UAAD,EAAa,YAAb,CAAhB,CADI;AAEf5B,EAAAA,OAAO,EAAEb,SAAS,CAAC0C,IAFJ;AAGftB,EAAAA,QAAQ,EAAEpB,SAAS,CAAC2C,IAHL;AAIf/B,EAAAA,KAAK,EAAEZ,SAAS,CAAC0C,IAJF;AAKftB,EAAAA,QAAQ,EAAEpB,SAAS,CAAC2C,IALL;AAMf7B,EAAAA,aAAa,EAAEd,SAAS,CAAC0C,IANV;AAOf3B,EAAAA,eAAe,EAAEf,SAAS,CAAC0C,IAPZ;AAQf1B,EAAAA,SAAS,EAAEhB,SAAS,CAAC0C,IARN;AASfzB,EAAAA,YAAY,EAAEjB,SAAS,CAAC0C,IATT;AAUfxB,EAAAA,MAAM,EAAElB,SAAS,CAAC2C,IAVH;AAUQ;AACvBxB,EAAAA,QAAQ,EAAEnB,SAAS,CAAC2C,IAXL,CAWU;;AAXV,CAAnB,C,CAcA;;AACAnC,MAAM,CAACoC,YAAP,GAAsB;AAClB;AACAjC,EAAAA,SAAS,EAAE,UAFO;AAGlB;AACAC,EAAAA,KAAK,EAAE,IAJW;AAKlB;AACAC,EAAAA,OAAO,EAAE,IANS;AAOlB;AACAO,EAAAA,QAAQ,EAAE,IARQ;AASlB;AACAN,EAAAA,aAAa,EAAE,KAVG;AAWlB;AACAC,EAAAA,eAAe,EAAE,KAZC;AAalB;AACAC,EAAAA,SAAS,EAAE,IAdO;AAelB;AACAC,EAAAA,YAAY,EAAE,IAhBI;AAiBlBC,EAAAA,MAAM,EAAE,IAjBU;AAkBlBC,EAAAA,QAAQ,EAAE;AAlBQ,CAAtB;AAsBA,eAAeX,MAAf","sourcesContent":["import React, { forwardRef, useState,useEffect, useRef, useImperativeHandle, useMemo } from \"react\"\nimport PropTypes from \"prop-types\"\nimport BScroll from \"better-scroll\"\nimport styled from 'styled-components';\nimport { debounce } from \"../../api/utils\";\n\nconst ScrollContainer = styled.div`\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n`\n\nconst PullUpLoading = styled.div`\n  position: absolute;\n  left:0; right:0;\n  bottom: 5px;\n  width: 60px;\n  height: 60px;\n  margin: auto;\n  z-index: 100;\n`\n\nexport const PullDownLoading = styled.div`\n  position: absolute;\n  left:0; right:0;\n  top: 0px;\n  height: 30px;\n  margin: auto;\n  z-index: 100;\n`\n\n\n\n//而函数式组件天生不具备被上层组件直接调用 ref 的条件，\n//因此需要用 React 当中一些特殊的方式来处理，即使用 forwardRef 进行包裹。\nconst Scroll = forwardRef((props, ref) => {\n\n    const { direction, click, refresh, pullUpLoading, pullDownLoading, bounceTop, bounceBottom } = props;\n\n    const { pullUp, pullDown, onScroll } = props;\n\n    //better-scroll 实例对象\n    const [bScroll, setBScroll] = useState ();\n    //current 指向初始化 bs 实例需要的 DOM 元素 \n    const scrollContaninerRef = useRef ();\n\n    //接下来创建 better-scroll，\n    useEffect(() => {\n        const scroll = new BScroll(scrollContaninerRef.current, {\n            scrollX: direction === \"horizental\",\n            scrollY: direction === \"vertical\",\n            probeType:3,\n            click: click,\n            bounce:{\n              top: bounceTop,\n              bottom: bounceBottom\n            }\n        })\n        setBScroll(scroll);\n        return () => {\n            setBScroll(null);\n        }\n\n    }, [onScroll, bScroll])\n\n    useEffect(() => {\n        if(!bScroll || onScroll) return;\n        bScroll.on ('scroll', (scroll) => {\n            onScroll (scroll);\n        })\n        return () => {\n            bScroll.off('scroll')\n        }\n    }, [onScroll, bScroll])\n    //进行上拉到底的判断，调用上拉刷新的函数\n    useEffect(() => {\n        if(!bScroll || !pullUp) return\n        bScroll.on('scrollEnd', () => {\n            if(bScroll.y > bScroll.maxScrollY + 100){\n                //调用上拉刷新的函数\n                pullUp ();\n            }\n        });\n        return () => {\n            bScroll.off('scrollEnd')\n        }\n    },[pullUp, bScroll])\n\n    //进行下拉的判断，调用下拉刷新的函数\n    useEffect(() => {\n        if(!bScroll || !pullDown) return\n        bScroll.on('touchEnd', (pos) => {\n            if(pos.y >50){\n                pullDown();\n            }\n        })\n        return () => {\n            bScroll.off('touchEnd')\n        }\n\n    },[pullDown, bScroll])\n\n    //useImperativeHandle 可以让你在使用 ref 时自定义暴露给父组件的实例值\n    //让外部组件通过ref对组件进行操作\n    useImperativeHandle(ref, () => ({\n        refresh() {\n            if(bScroll) {\n                bScroll.refresh();\n                bScroll.scrollTo(0,0)\n            }\n        },\n        getBScroll() {\n            if(bScroll){\n                return bScroll\n            }\n        }\n    }))\n    return (\n        <ScrollContainer ref={scrollContaninerRef}>\n          {props.children}\n        </ScrollContainer>\n    );\n})\n\n\n\n\n\n//基本配置\nScroll.propTypes = {\n    direction: PropTypes.oneOf(['vertical', 'horizental']),\n    refresh: PropTypes.bool,\n    onScroll: PropTypes.func,\n    click: PropTypes.bool,\n    onScroll: PropTypes.func,\n    pullUpLoading: PropTypes.bool,\n    pullDownLoading: PropTypes.bool,\n    bounceTop: PropTypes.bool,\n    bounceBottom: PropTypes.bool,\n    pullUp: PropTypes.func,// 上拉加载逻辑\n    pullDown: PropTypes.func,// 下拉加载逻辑\n}\n\n//设置默认值\nScroll.defaultProps = {\n    // 滚动的方向\n    direction: 'vertical',\n    // 是否支持点击\n    click: true,\n    //是否刷新\n    refresh: true,\n    //滑动触发的回调函数\n    onScroll: null,\n    //是否显示上拉 loading 动画\n    pullUpLoading: false,\n    //是否显示下拉 loading 动画\n    pullDownLoading: false,\n    // 是否支持向上吸顶\n    bounceTop: true,\n    // 是否支持向下吸底\n    bounceBottom: true,\n    pullUp: null,\n    pullDown: null,\n}\n\n\nexport default Scroll;\n"]},"metadata":{},"sourceType":"module"}